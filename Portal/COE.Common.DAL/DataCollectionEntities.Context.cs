//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
 
namespace COE.Common.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using Model;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class COEEntities : DbContext
    {
        public COEEntities()
            : base("name=COEEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Model.ActivationCode> ActivationCode { get; set; }
        public virtual DbSet<Model.Alert> Alert { get; set; }
        public virtual DbSet<Model.AlertType> AlertType { get; set; }
        public virtual DbSet<Model.AttachmentContents> AttachmentContents { get; set; }
        public virtual DbSet<Model.Attachments> Attachments { get; set; }
        public virtual DbSet<Model.AttachmentTypes> AttachmentTypes { get; set; }
        public virtual DbSet<Model.HomePageCategory> HomePageCategory { get; set; }
        public virtual DbSet<Model.HomePageModule> HomePageModule { get; set; }
        public virtual DbSet<Model.SystemSettings> SystemSettings { get; set; }
        public virtual DbSet<Model.UserActivity> UserActivity { get; set; }
        public virtual DbSet<Model.UserActivityType> UserActivityType { get; set; }
        public virtual DbSet<Model.AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<Model.AspNetRolesParent> AspNetRolesParent { get; set; }
        public virtual DbSet<Model.AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<Model.AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<Model.AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Model.Stage> Stage { get; set; }
        public virtual DbSet<Model.StageDecision> StageDecision { get; set; }
        public virtual DbSet<Model.Status> Status { get; set; }
        public virtual DbSet<Model.Action> Action { get; set; }
        public virtual DbSet<Model.CollegeStaff> CollegeStaff { get; set; }
        public virtual DbSet<Model.FieldVisibilty> FieldVisibilty { get; set; }
        public virtual DbSet<Model.JobType> JobType { get; set; }
        public virtual DbSet<Model.LeaveReason> LeaveReason { get; set; }
        public virtual DbSet<Model.Module> Module { get; set; }
        public virtual DbSet<Model.ModuleAction> ModuleAction { get; set; }
        public virtual DbSet<Model.ModuleCategory> ModuleCategory { get; set; }
        public virtual DbSet<Model.ModuleField> ModuleField { get; set; }
        public virtual DbSet<Model.ModuleRole> ModuleRole { get; set; }
        public virtual DbSet<Model.RolePermission> RolePermission { get; set; }
        public virtual DbSet<Model.StaffLevel> StaffLevel { get; set; }
        public virtual DbSet<Model.StaffQualification> StaffQualification { get; set; }
        public virtual DbSet<Model.StaffSpecialization> StaffSpecialization { get; set; }
        public virtual DbSet<Model.StaffType> StaffType { get; set; }
        public virtual DbSet<Model.UserCollege> UserCollege { get; set; }
        public virtual DbSet<Model.UserDisplay> UserDisplay { get; set; }
        public virtual DbSet<Model.UserEmployer> UserEmployer { get; set; }
        public virtual DbSet<Model.UserPermission> UserPermission { get; set; }
        public virtual DbSet<Model.UserSpecialization> UserSpecialization { get; set; }
        public virtual DbSet<Model.VisaType> VisaType { get; set; }
        public virtual DbSet<Model.VisibiltyRuleField> VisibiltyRuleField { get; set; }
        public virtual DbSet<Model.VisibitlyRule> VisibitlyRule { get; set; }
        public virtual DbSet<Model.QuestionAnswer> QuestionAnswer { get; set; }
        public virtual DbSet<Model.QuestionOption> QuestionOption { get; set; }
        public virtual DbSet<Model.QuestionType> QuestionType { get; set; }
        public virtual DbSet<Model.Survey> Survey { get; set; }
        public virtual DbSet<Model.SurveyAnswer> SurveyAnswer { get; set; }
        public virtual DbSet<Model.SurveyModules> SurveyModules { get; set; }
        public virtual DbSet<Model.SurveyQuestion> SurveyQuestion { get; set; }
        public virtual DbSet<Model.TempNotificationQueue> TempNotificationQueue { get; set; }
    
        public virtual int TempInsertIntoCollegeSpecialization()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TempInsertIntoCollegeSpecialization");
        }
    
        public virtual ObjectResult<AspNetUsers_SelectUserIdByCollegeIdAndNationalIdAndTermId_Result> AspNetUsers_SelectUserIdByCollegeIdAndNationalIdAndTermId(string nationalID, Nullable<int> collegeID, Nullable<int> academicYearTermID)
        {
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AspNetUsers_SelectUserIdByCollegeIdAndNationalIdAndTermId_Result>("AspNetUsers_SelectUserIdByCollegeIdAndNationalIdAndTermId", nationalIDParameter, collegeIDParameter, academicYearTermIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Section_Insert(Nullable<int> termCourseID, string sectionCode, Nullable<decimal> totalHours, string userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> uploadRequestID)
        {
            var termCourseIDParameter = termCourseID.HasValue ?
                new ObjectParameter("TermCourseID", termCourseID) :
                new ObjectParameter("TermCourseID", typeof(int));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var totalHoursParameter = totalHours.HasValue ?
                new ObjectParameter("TotalHours", totalHours) :
                new ObjectParameter("TotalHours", typeof(decimal));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var uploadRequestIDParameter = uploadRequestID.HasValue ?
                new ObjectParameter("UploadRequestID", uploadRequestID) :
                new ObjectParameter("UploadRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Section_Insert", termCourseIDParameter, sectionCodeParameter, totalHoursParameter, userIDParameter, startDateParameter, endDateParameter, uploadRequestIDParameter);
        }
    
        public virtual ObjectResult<Section_SelectByCodeAndCourseCodeAndTerm_Result> Section_SelectByCodeAndCourseCodeAndTerm(string courseCode, Nullable<int> collegeID, string sectionCode, Nullable<int> academicYearTermID)
        {
            var courseCodeParameter = courseCode != null ?
                new ObjectParameter("CourseCode", courseCode) :
                new ObjectParameter("CourseCode", typeof(string));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Section_SelectByCodeAndCourseCodeAndTerm_Result>("Section_SelectByCodeAndCourseCodeAndTerm", courseCodeParameter, collegeIDParameter, sectionCodeParameter, academicYearTermIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SectionAttendanceSetting_Insert(Nullable<int> sectionID, Nullable<decimal> offeredHours, string userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var sectionIDParameter = sectionID.HasValue ?
                new ObjectParameter("SectionID", sectionID) :
                new ObjectParameter("SectionID", typeof(int));
    
            var offeredHoursParameter = offeredHours.HasValue ?
                new ObjectParameter("OfferedHours", offeredHours) :
                new ObjectParameter("OfferedHours", typeof(decimal));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SectionAttendanceSetting_Insert", sectionIDParameter, offeredHoursParameter, userIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SectionAttendanceSetting_SelectDetails_Result> SectionAttendanceSetting_SelectDetails(Nullable<int> collegeID, Nullable<int> academicYearTermID, string courseCode, string sectionCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            var courseCodeParameter = courseCode != null ?
                new ObjectParameter("CourseCode", courseCode) :
                new ObjectParameter("CourseCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SectionAttendanceSetting_SelectDetails_Result>("SectionAttendanceSetting_SelectDetails", collegeIDParameter, academicYearTermIDParameter, courseCodeParameter, sectionCodeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SectionEnrollment_CheckIfRepeatedStudent_Result> SectionEnrollment_CheckIfRepeatedStudent(string nationalID, Nullable<int> collegeID, Nullable<int> academicYearTermID, string courseCode, string sectionCode)
        {
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            var courseCodeParameter = courseCode != null ?
                new ObjectParameter("CourseCode", courseCode) :
                new ObjectParameter("CourseCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SectionEnrollment_CheckIfRepeatedStudent_Result>("SectionEnrollment_CheckIfRepeatedStudent", nationalIDParameter, collegeIDParameter, academicYearTermIDParameter, courseCodeParameter, sectionCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SectionEnrollment_GetID(string nationalID, Nullable<int> collegeID, Nullable<int> academicYearTermID, string courseCode, Nullable<int> sectionID)
        {
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            var courseCodeParameter = courseCode != null ?
                new ObjectParameter("CourseCode", courseCode) :
                new ObjectParameter("CourseCode", typeof(string));
    
            var sectionIDParameter = sectionID.HasValue ?
                new ObjectParameter("SectionID", sectionID) :
                new ObjectParameter("SectionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SectionEnrollment_GetID", nationalIDParameter, collegeIDParameter, academicYearTermIDParameter, courseCodeParameter, sectionIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SectionEnrollment_Insert(Nullable<int> enrollmentID, Nullable<int> sectionID, Nullable<bool> isRepeated, string userID, Nullable<int> uploadRequestID)
        {
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            var sectionIDParameter = sectionID.HasValue ?
                new ObjectParameter("SectionID", sectionID) :
                new ObjectParameter("SectionID", typeof(int));
    
            var isRepeatedParameter = isRepeated.HasValue ?
                new ObjectParameter("IsRepeated", isRepeated) :
                new ObjectParameter("IsRepeated", typeof(bool));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var uploadRequestIDParameter = uploadRequestID.HasValue ?
                new ObjectParameter("UploadRequestID", uploadRequestID) :
                new ObjectParameter("UploadRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SectionEnrollment_Insert", enrollmentIDParameter, sectionIDParameter, isRepeatedParameter, userIDParameter, uploadRequestIDParameter);
        }
    
        public virtual ObjectResult<SectionEnrollmentAttendance_CheckIfRepeatedStudent_Result> SectionEnrollmentAttendance_CheckIfRepeatedStudent(string nationalID, Nullable<int> collegeID, Nullable<int> academicYearTermID, string courseCode, string sectionCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            var courseCodeParameter = courseCode != null ?
                new ObjectParameter("CourseCode", courseCode) :
                new ObjectParameter("CourseCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SectionEnrollmentAttendance_CheckIfRepeatedStudent_Result>("SectionEnrollmentAttendance_CheckIfRepeatedStudent", nationalIDParameter, collegeIDParameter, academicYearTermIDParameter, courseCodeParameter, sectionCodeParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SectionEnrollmentAttendance_Insert(Nullable<int> sectionEnrollmentID, Nullable<int> sectionAttendanceSettingID, Nullable<decimal> attendedHours, Nullable<decimal> excusedHours, Nullable<decimal> extraHours, Nullable<int> oJT, string userID, Nullable<int> uploadRequestID)
        {
            var sectionEnrollmentIDParameter = sectionEnrollmentID.HasValue ?
                new ObjectParameter("SectionEnrollmentID", sectionEnrollmentID) :
                new ObjectParameter("SectionEnrollmentID", typeof(int));
    
            var sectionAttendanceSettingIDParameter = sectionAttendanceSettingID.HasValue ?
                new ObjectParameter("SectionAttendanceSettingID", sectionAttendanceSettingID) :
                new ObjectParameter("SectionAttendanceSettingID", typeof(int));
    
            var attendedHoursParameter = attendedHours.HasValue ?
                new ObjectParameter("AttendedHours", attendedHours) :
                new ObjectParameter("AttendedHours", typeof(decimal));
    
            var excusedHoursParameter = excusedHours.HasValue ?
                new ObjectParameter("ExcusedHours", excusedHours) :
                new ObjectParameter("ExcusedHours", typeof(decimal));
    
            var extraHoursParameter = extraHours.HasValue ?
                new ObjectParameter("ExtraHours", extraHours) :
                new ObjectParameter("ExtraHours", typeof(decimal));
    
            var oJTParameter = oJT.HasValue ?
                new ObjectParameter("OJT", oJT) :
                new ObjectParameter("OJT", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var uploadRequestIDParameter = uploadRequestID.HasValue ?
                new ObjectParameter("UploadRequestID", uploadRequestID) :
                new ObjectParameter("UploadRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SectionEnrollmentAttendance_Insert", sectionEnrollmentIDParameter, sectionAttendanceSettingIDParameter, attendedHoursParameter, excusedHoursParameter, extraHoursParameter, oJTParameter, userIDParameter, uploadRequestIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SectionEnrollmentAttendanceValidation_Insert(string courseCode, string sectionCode, string nationalID, string attendedHours, string excusedHours, string extraHours, string oJT, Nullable<int> reasonOfRejection, string userID, Nullable<int> uploadRequestID)
        {
            var courseCodeParameter = courseCode != null ?
                new ObjectParameter("CourseCode", courseCode) :
                new ObjectParameter("CourseCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var attendedHoursParameter = attendedHours != null ?
                new ObjectParameter("AttendedHours", attendedHours) :
                new ObjectParameter("AttendedHours", typeof(string));
    
            var excusedHoursParameter = excusedHours != null ?
                new ObjectParameter("ExcusedHours", excusedHours) :
                new ObjectParameter("ExcusedHours", typeof(string));
    
            var extraHoursParameter = extraHours != null ?
                new ObjectParameter("ExtraHours", extraHours) :
                new ObjectParameter("ExtraHours", typeof(string));
    
            var oJTParameter = oJT != null ?
                new ObjectParameter("OJT", oJT) :
                new ObjectParameter("OJT", typeof(string));
    
            var reasonOfRejectionParameter = reasonOfRejection.HasValue ?
                new ObjectParameter("ReasonOfRejection", reasonOfRejection) :
                new ObjectParameter("ReasonOfRejection", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var uploadRequestIDParameter = uploadRequestID.HasValue ?
                new ObjectParameter("UploadRequestID", uploadRequestID) :
                new ObjectParameter("UploadRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SectionEnrollmentAttendanceValidation_Insert", courseCodeParameter, sectionCodeParameter, nationalIDParameter, attendedHoursParameter, excusedHoursParameter, extraHoursParameter, oJTParameter, reasonOfRejectionParameter, userIDParameter, uploadRequestIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SectionEnrollmentValidation_Insert(string courseCode, string sectionCode, string nationalID, string status, Nullable<int> reasonOfRejection, string userID, Nullable<int> uploadRequestID)
        {
            var courseCodeParameter = courseCode != null ?
                new ObjectParameter("CourseCode", courseCode) :
                new ObjectParameter("CourseCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var reasonOfRejectionParameter = reasonOfRejection.HasValue ?
                new ObjectParameter("ReasonOfRejection", reasonOfRejection) :
                new ObjectParameter("ReasonOfRejection", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var uploadRequestIDParameter = uploadRequestID.HasValue ?
                new ObjectParameter("UploadRequestID", uploadRequestID) :
                new ObjectParameter("UploadRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SectionEnrollmentValidation_Insert", courseCodeParameter, sectionCodeParameter, nationalIDParameter, statusParameter, reasonOfRejectionParameter, userIDParameter, uploadRequestIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SectionValidation_Insert(string courseCode, string sectionCode, string startDate, string endDate, Nullable<decimal> firstMonth, Nullable<decimal> secondMonth, Nullable<decimal> thirdMonth, Nullable<decimal> fourthMonth, Nullable<decimal> fifthMonth, Nullable<decimal> sixthMonth, Nullable<int> reasonOfRejection, string userID, Nullable<int> uploadRequestID)
        {
            var courseCodeParameter = courseCode != null ?
                new ObjectParameter("CourseCode", courseCode) :
                new ObjectParameter("CourseCode", typeof(string));
    
            var sectionCodeParameter = sectionCode != null ?
                new ObjectParameter("SectionCode", sectionCode) :
                new ObjectParameter("SectionCode", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var firstMonthParameter = firstMonth.HasValue ?
                new ObjectParameter("FirstMonth", firstMonth) :
                new ObjectParameter("FirstMonth", typeof(decimal));
    
            var secondMonthParameter = secondMonth.HasValue ?
                new ObjectParameter("SecondMonth", secondMonth) :
                new ObjectParameter("SecondMonth", typeof(decimal));
    
            var thirdMonthParameter = thirdMonth.HasValue ?
                new ObjectParameter("ThirdMonth", thirdMonth) :
                new ObjectParameter("ThirdMonth", typeof(decimal));
    
            var fourthMonthParameter = fourthMonth.HasValue ?
                new ObjectParameter("FourthMonth", fourthMonth) :
                new ObjectParameter("FourthMonth", typeof(decimal));
    
            var fifthMonthParameter = fifthMonth.HasValue ?
                new ObjectParameter("FifthMonth", fifthMonth) :
                new ObjectParameter("FifthMonth", typeof(decimal));
    
            var sixthMonthParameter = sixthMonth.HasValue ?
                new ObjectParameter("SixthMonth", sixthMonth) :
                new ObjectParameter("SixthMonth", typeof(decimal));
    
            var reasonOfRejectionParameter = reasonOfRejection.HasValue ?
                new ObjectParameter("ReasonOfRejection", reasonOfRejection) :
                new ObjectParameter("ReasonOfRejection", typeof(int));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var uploadRequestIDParameter = uploadRequestID.HasValue ?
                new ObjectParameter("UploadRequestID", uploadRequestID) :
                new ObjectParameter("UploadRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SectionValidation_Insert", courseCodeParameter, sectionCodeParameter, startDateParameter, endDateParameter, firstMonthParameter, secondMonthParameter, thirdMonthParameter, fourthMonthParameter, fifthMonthParameter, sixthMonthParameter, reasonOfRejectionParameter, userIDParameter, uploadRequestIDParameter);
        }
    
        public virtual ObjectResult<uspGetEnrollmentAttendance_Result> uspGetEnrollmentAttendance(Nullable<int> academicYearId, Nullable<int> enrollmentID)
        {
            var academicYearIdParameter = academicYearId.HasValue ?
                new ObjectParameter("AcademicYearId", academicYearId) :
                new ObjectParameter("AcademicYearId", typeof(int));
    
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetEnrollmentAttendance_Result>("uspGetEnrollmentAttendance", academicYearIdParameter, enrollmentIDParameter);
        }
    
        public virtual ObjectResult<GetModuleActionsByUserNameAndCategoryAndModuleAndAction_Result> GetModuleActionsByUserNameAndCategoryAndModuleAndAction(string loginName, string moduleCategoryName, string moduleName, string actionName)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var moduleCategoryNameParameter = moduleCategoryName != null ?
                new ObjectParameter("ModuleCategoryName", moduleCategoryName) :
                new ObjectParameter("ModuleCategoryName", typeof(string));
    
            var moduleNameParameter = moduleName != null ?
                new ObjectParameter("ModuleName", moduleName) :
                new ObjectParameter("ModuleName", typeof(string));
    
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModuleActionsByUserNameAndCategoryAndModuleAndAction_Result>("GetModuleActionsByUserNameAndCategoryAndModuleAndAction", loginNameParameter, moduleCategoryNameParameter, moduleNameParameter, actionNameParameter);
        }
    
        public virtual ObjectResult<AcademicYearTerm_SelectByID_Result> AcademicYearTerm_SelectByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AcademicYearTerm_SelectByID_Result>("AcademicYearTerm_SelectByID", iDParameter);
        }
    
        public virtual ObjectResult<Course_SelectCourseIdByCourseCodeAndCollegeID_Result> Course_SelectCourseIdByCourseCodeAndCollegeID(string courseCode, Nullable<int> collegeID)
        {
            var courseCodeParameter = courseCode != null ?
                new ObjectParameter("CourseCode", courseCode) :
                new ObjectParameter("CourseCode", typeof(string));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Course_SelectCourseIdByCourseCodeAndCollegeID_Result>("Course_SelectCourseIdByCourseCodeAndCollegeID", courseCodeParameter, collegeIDParameter);
        }
    
        public virtual ObjectResult<Course_SelectIdAndTermCourseIdByCourseCodeAndCollegeID_Result> Course_SelectIdAndTermCourseIdByCourseCodeAndCollegeID(string courseCode, Nullable<int> collegeID, Nullable<int> academicYearTermID)
        {
            var courseCodeParameter = courseCode != null ?
                new ObjectParameter("CourseCode", courseCode) :
                new ObjectParameter("CourseCode", typeof(string));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Course_SelectIdAndTermCourseIdByCourseCodeAndCollegeID_Result>("Course_SelectIdAndTermCourseIdByCourseCodeAndCollegeID", courseCodeParameter, collegeIDParameter, academicYearTermIDParameter);
        }
    
        public virtual int UpdateRequestStatus(Nullable<int> requestID, Nullable<int> uploadStatusID, string createdBy)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(int));
    
            var uploadStatusIDParameter = uploadStatusID.HasValue ?
                new ObjectParameter("UploadStatusID", uploadStatusID) :
                new ObjectParameter("UploadStatusID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRequestStatus", requestIDParameter, uploadStatusIDParameter, createdByParameter);
        }
    
        public virtual int UploadRequest_UpdateCsvFileUrl(Nullable<int> requestID, string uploadedFileURL)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(int));
    
            var uploadedFileURLParameter = uploadedFileURL != null ?
                new ObjectParameter("UploadedFileURL", uploadedFileURL) :
                new ObjectParameter("UploadedFileURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UploadRequest_UpdateCsvFileUrl", requestIDParameter, uploadedFileURLParameter);
        }
    
        public virtual int UploadRequest_UpdateNoOfRecords(Nullable<int> iD, Nullable<int> noOfRecords, Nullable<int> noOfInValidRecords, string modifiedBy)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var noOfRecordsParameter = noOfRecords.HasValue ?
                new ObjectParameter("NoOfRecords", noOfRecords) :
                new ObjectParameter("NoOfRecords", typeof(int));
    
            var noOfInValidRecordsParameter = noOfInValidRecords.HasValue ?
                new ObjectParameter("NoOfInValidRecords", noOfInValidRecords) :
                new ObjectParameter("NoOfInValidRecords", typeof(int));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UploadRequest_UpdateNoOfRecords", iDParameter, noOfRecordsParameter, noOfInValidRecordsParameter, modifiedByParameter);
        }
    
        public virtual int UploadRequest_UpdateProgress(Nullable<int> iD, Nullable<int> recordProgress, Nullable<int> progressTypeID, Nullable<bool> isProgressCompleted, string modifiedBy)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var recordProgressParameter = recordProgress.HasValue ?
                new ObjectParameter("RecordProgress", recordProgress) :
                new ObjectParameter("RecordProgress", typeof(int));
    
            var progressTypeIDParameter = progressTypeID.HasValue ?
                new ObjectParameter("ProgressTypeID", progressTypeID) :
                new ObjectParameter("ProgressTypeID", typeof(int));
    
            var isProgressCompletedParameter = isProgressCompleted.HasValue ?
                new ObjectParameter("IsProgressCompleted", isProgressCompleted) :
                new ObjectParameter("IsProgressCompleted", typeof(bool));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UploadRequest_UpdateProgress", iDParameter, recordProgressParameter, progressTypeIDParameter, isProgressCompletedParameter, modifiedByParameter);
        }
    
        public virtual ObjectResult<UploadRequestDetailsAttendance_SelectByUploadRequestID_Result> UploadRequestDetailsAttendance_SelectByUploadRequestID(Nullable<int> requestID)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UploadRequestDetailsAttendance_SelectByUploadRequestID_Result>("UploadRequestDetailsAttendance_SelectByUploadRequestID", requestIDParameter);
        }
    
        public virtual ObjectResult<UploadRequestDetailsSection_SelectByUploadRequestID_Result> UploadRequestDetailsSection_SelectByUploadRequestID(Nullable<int> requestID)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UploadRequestDetailsSection_SelectByUploadRequestID_Result>("UploadRequestDetailsSection_SelectByUploadRequestID", requestIDParameter);
        }
    
        public virtual ObjectResult<UploadRequestDetailsSectionEnrollment_SelectByUploadRequestID_Result> UploadRequestDetailsSectionEnrollment_SelectByUploadRequestID(Nullable<int> requestID)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UploadRequestDetailsSectionEnrollment_SelectByUploadRequestID_Result>("UploadRequestDetailsSectionEnrollment_SelectByUploadRequestID", requestIDParameter);
        }
    
        public virtual ObjectResult<uspGetUsersByCollegeIdAndRoleId_Result> uspGetUsersByCollegeIdAndRoleId(Nullable<int> collegeId, Nullable<System.Guid> roleId)
        {
            var collegeIdParameter = collegeId.HasValue ?
                new ObjectParameter("CollegeId", collegeId) :
                new ObjectParameter("CollegeId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUsersByCollegeIdAndRoleId_Result>("uspGetUsersByCollegeIdAndRoleId", collegeIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<uspGetSectionEnrollmentAttendance_Result> uspGetSectionEnrollmentAttendance(Nullable<int> academicYearId, Nullable<int> enrollmentID, Nullable<int> academicYearTermId)
        {
            var academicYearIdParameter = academicYearId.HasValue ?
                new ObjectParameter("AcademicYearId", academicYearId) :
                new ObjectParameter("AcademicYearId", typeof(int));
    
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            var academicYearTermIdParameter = academicYearTermId.HasValue ?
                new ObjectParameter("AcademicYearTermId", academicYearTermId) :
                new ObjectParameter("AcademicYearTermId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetSectionEnrollmentAttendance_Result>("uspGetSectionEnrollmentAttendance", academicYearIdParameter, enrollmentIDParameter, academicYearTermIdParameter);
        }
    
        public virtual int AddEmailNotification(string content, string createdBy, string recipients, string subject)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmailNotification", contentParameter, createdByParameter, recipientsParameter, subjectParameter);
        }
    
        public virtual int AddSMSNotification(string content, string createdBy, string recipients)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSMSNotification", contentParameter, createdByParameter, recipientsParameter);
        }
    
        public virtual ObjectResult<GetEmailBody_Result> GetEmailBody(string emailBodyKey, string emailSubjectKey, string applicationId, Nullable<bool> isArabic)
        {
            var emailBodyKeyParameter = emailBodyKey != null ?
                new ObjectParameter("EmailBodyKey", emailBodyKey) :
                new ObjectParameter("EmailBodyKey", typeof(string));
    
            var emailSubjectKeyParameter = emailSubjectKey != null ?
                new ObjectParameter("EmailSubjectKey", emailSubjectKey) :
                new ObjectParameter("EmailSubjectKey", typeof(string));
    
            var applicationIdParameter = applicationId != null ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(string));
    
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmailBody_Result>("GetEmailBody", emailBodyKeyParameter, emailSubjectKeyParameter, applicationIdParameter, isArabicParameter);
        }
    
        public virtual ObjectResult<string> GetSMSBody(string sMSBodyKey, string applicationId)
        {
            var sMSBodyKeyParameter = sMSBodyKey != null ?
                new ObjectParameter("SMSBodyKey", sMSBodyKey) :
                new ObjectParameter("SMSBodyKey", typeof(string));
    
            var applicationIdParameter = applicationId != null ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSMSBody", sMSBodyKeyParameter, applicationIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetDeferralRequestsStatisticsCounts(Nullable<int> collegeID, Nullable<int> academicYearID, Nullable<int> statusID, string loginName)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetDeferralRequestsStatisticsCounts", collegeIDParameter, academicYearIDParameter, statusIDParameter, loginNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetDismissRequestsStatisticsCounts(Nullable<int> collegeID, Nullable<int> academicYearID, Nullable<int> statusID, string loginName)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetDismissRequestsStatisticsCounts", collegeIDParameter, academicYearIDParameter, statusIDParameter, loginNameParameter);
        }
    
        public virtual int uspUpdateEnrollmentStage(Nullable<int> enrollmentId, Nullable<int> stageID, string updatedBy)
        {
            var enrollmentIdParameter = enrollmentId.HasValue ?
                new ObjectParameter("EnrollmentId", enrollmentId) :
                new ObjectParameter("EnrollmentId", typeof(int));
    
            var stageIDParameter = stageID.HasValue ?
                new ObjectParameter("StageID", stageID) :
                new ObjectParameter("StageID", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateEnrollmentStage", enrollmentIdParameter, stageIDParameter, updatedByParameter);
        }
    
        public virtual int getlatestIdofvocationalresult(Nullable<int> enrollmentID, Nullable<int> collegeSpecializationID, Nullable<int> academicYearTermID, Nullable<int> levelID, Nullable<int> examStatusID, Nullable<decimal> gPA, string createdBy, string updatedBy, Nullable<int> overAllVocationalExamScoreID, ObjectParameter latestId)
        {
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            var collegeSpecializationIDParameter = collegeSpecializationID.HasValue ?
                new ObjectParameter("CollegeSpecializationID", collegeSpecializationID) :
                new ObjectParameter("CollegeSpecializationID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            var levelIDParameter = levelID.HasValue ?
                new ObjectParameter("LevelID", levelID) :
                new ObjectParameter("LevelID", typeof(int));
    
            var examStatusIDParameter = examStatusID.HasValue ?
                new ObjectParameter("ExamStatusID", examStatusID) :
                new ObjectParameter("ExamStatusID", typeof(int));
    
            var gPAParameter = gPA.HasValue ?
                new ObjectParameter("GPA", gPA) :
                new ObjectParameter("GPA", typeof(decimal));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var overAllVocationalExamScoreIDParameter = overAllVocationalExamScoreID.HasValue ?
                new ObjectParameter("OverAllVocationalExamScoreID", overAllVocationalExamScoreID) :
                new ObjectParameter("OverAllVocationalExamScoreID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getlatestIdofvocationalresult", enrollmentIDParameter, collegeSpecializationIDParameter, academicYearTermIDParameter, levelIDParameter, examStatusIDParameter, gPAParameter, createdByParameter, updatedByParameter, overAllVocationalExamScoreIDParameter, latestId);
        }
    
        public virtual ObjectResult<uspGetEnrollmentEnglishExamResult_Result> uspGetEnrollmentEnglishExamResult(string nationalId, Nullable<int> enrollmentID)
        {
            var nationalIdParameter = nationalId != null ?
                new ObjectParameter("NationalId", nationalId) :
                new ObjectParameter("NationalId", typeof(string));
    
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetEnrollmentEnglishExamResult_Result>("uspGetEnrollmentEnglishExamResult", nationalIdParameter, enrollmentIDParameter);
        }
    
        public virtual ObjectResult<CardsRequest_GetStudentsWithNoCard_Result> CardsRequest_GetStudentsWithNoCard(Nullable<int> collegeID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CardsRequest_GetStudentsWithNoCard_Result>("CardsRequest_GetStudentsWithNoCard", collegeIDParameter);
        }
    
        public virtual ObjectResult<CardsRequest_Insert_Result> CardsRequest_Insert(Nullable<int> collegeID, Nullable<int> cardsRequestTypeID, Nullable<int> requestStatusID, Nullable<int> noOfStudents, Nullable<int> fileAutoGenerationStatusID, string createdBy, string updatedBy)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var cardsRequestTypeIDParameter = cardsRequestTypeID.HasValue ?
                new ObjectParameter("CardsRequestTypeID", cardsRequestTypeID) :
                new ObjectParameter("CardsRequestTypeID", typeof(int));
    
            var requestStatusIDParameter = requestStatusID.HasValue ?
                new ObjectParameter("RequestStatusID", requestStatusID) :
                new ObjectParameter("RequestStatusID", typeof(int));
    
            var noOfStudentsParameter = noOfStudents.HasValue ?
                new ObjectParameter("NoOfStudents", noOfStudents) :
                new ObjectParameter("NoOfStudents", typeof(int));
    
            var fileAutoGenerationStatusIDParameter = fileAutoGenerationStatusID.HasValue ?
                new ObjectParameter("FileAutoGenerationStatusID", fileAutoGenerationStatusID) :
                new ObjectParameter("FileAutoGenerationStatusID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CardsRequest_Insert_Result>("CardsRequest_Insert", collegeIDParameter, cardsRequestTypeIDParameter, requestStatusIDParameter, noOfStudentsParameter, fileAutoGenerationStatusIDParameter, createdByParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<CardsRequest_Update_Result> CardsRequest_Update(Nullable<int> iD, Nullable<int> noOfStudents, Nullable<int> noOfAccepted, Nullable<int> noOfRejected, string fileUrl, Nullable<int> replyUploadRequestID, Nullable<int> requestStatusID, Nullable<int> fileAutoGenerationStatusID, Nullable<int> fileGenerationProgress, string updatedBy, string replyFileRequestNo, Nullable<int> replyFileNoOfRecords, Nullable<int> replyFileNoOfAccepted, Nullable<int> replyFileNoOfRejected)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var noOfStudentsParameter = noOfStudents.HasValue ?
                new ObjectParameter("NoOfStudents", noOfStudents) :
                new ObjectParameter("NoOfStudents", typeof(int));
    
            var noOfAcceptedParameter = noOfAccepted.HasValue ?
                new ObjectParameter("NoOfAccepted", noOfAccepted) :
                new ObjectParameter("NoOfAccepted", typeof(int));
    
            var noOfRejectedParameter = noOfRejected.HasValue ?
                new ObjectParameter("NoOfRejected", noOfRejected) :
                new ObjectParameter("NoOfRejected", typeof(int));
    
            var fileUrlParameter = fileUrl != null ?
                new ObjectParameter("FileUrl", fileUrl) :
                new ObjectParameter("FileUrl", typeof(string));
    
            var replyUploadRequestIDParameter = replyUploadRequestID.HasValue ?
                new ObjectParameter("ReplyUploadRequestID", replyUploadRequestID) :
                new ObjectParameter("ReplyUploadRequestID", typeof(int));
    
            var requestStatusIDParameter = requestStatusID.HasValue ?
                new ObjectParameter("RequestStatusID", requestStatusID) :
                new ObjectParameter("RequestStatusID", typeof(int));
    
            var fileAutoGenerationStatusIDParameter = fileAutoGenerationStatusID.HasValue ?
                new ObjectParameter("FileAutoGenerationStatusID", fileAutoGenerationStatusID) :
                new ObjectParameter("FileAutoGenerationStatusID", typeof(int));
    
            var fileGenerationProgressParameter = fileGenerationProgress.HasValue ?
                new ObjectParameter("FileGenerationProgress", fileGenerationProgress) :
                new ObjectParameter("FileGenerationProgress", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var replyFileRequestNoParameter = replyFileRequestNo != null ?
                new ObjectParameter("ReplyFileRequestNo", replyFileRequestNo) :
                new ObjectParameter("ReplyFileRequestNo", typeof(string));
    
            var replyFileNoOfRecordsParameter = replyFileNoOfRecords.HasValue ?
                new ObjectParameter("ReplyFileNoOfRecords", replyFileNoOfRecords) :
                new ObjectParameter("ReplyFileNoOfRecords", typeof(int));
    
            var replyFileNoOfAcceptedParameter = replyFileNoOfAccepted.HasValue ?
                new ObjectParameter("ReplyFileNoOfAccepted", replyFileNoOfAccepted) :
                new ObjectParameter("ReplyFileNoOfAccepted", typeof(int));
    
            var replyFileNoOfRejectedParameter = replyFileNoOfRejected.HasValue ?
                new ObjectParameter("ReplyFileNoOfRejected", replyFileNoOfRejected) :
                new ObjectParameter("ReplyFileNoOfRejected", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CardsRequest_Update_Result>("CardsRequest_Update", iDParameter, noOfStudentsParameter, noOfAcceptedParameter, noOfRejectedParameter, fileUrlParameter, replyUploadRequestIDParameter, requestStatusIDParameter, fileAutoGenerationStatusIDParameter, fileGenerationProgressParameter, updatedByParameter, replyFileRequestNoParameter, replyFileNoOfRecordsParameter, replyFileNoOfAcceptedParameter, replyFileNoOfRejectedParameter);
        }
    
        public virtual ObjectResult<College_GetCollegesWithStipend_Result> College_GetCollegesWithStipend()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<College_GetCollegesWithStipend_Result>("College_GetCollegesWithStipend");
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetTransferRequestsStatisticsCounts(Nullable<int> collegeID, Nullable<int> academicYearID, Nullable<int> statusID, string loginName)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetTransferRequestsStatisticsCounts", collegeIDParameter, academicYearIDParameter, statusIDParameter, loginNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetWithdrawRequestsStatisticsCounts(Nullable<int> collegeID, Nullable<int> academicYearID, Nullable<int> statusID, string loginName)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetWithdrawRequestsStatisticsCounts", collegeIDParameter, academicYearIDParameter, statusIDParameter, loginNameParameter);
        }
    
        public virtual int AddRequestAction(Nullable<long> requestID, Nullable<int> stageID, Nullable<int> decisionID, string comment, string createdBy)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(long));
    
            var stageIDParameter = stageID.HasValue ?
                new ObjectParameter("StageID", stageID) :
                new ObjectParameter("StageID", typeof(int));
    
            var decisionIDParameter = decisionID.HasValue ?
                new ObjectParameter("DecisionID", decisionID) :
                new ObjectParameter("DecisionID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRequestAction", requestIDParameter, stageIDParameter, decisionIDParameter, commentParameter, createdByParameter);
        }
    
        public virtual int UpdateRequestStage(Nullable<long> requestID, Nullable<int> stageID, string nextStep, string updatedBy)
        {
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(long));
    
            var stageIDParameter = stageID.HasValue ?
                new ObjectParameter("StageID", stageID) :
                new ObjectParameter("StageID", typeof(int));
    
            var nextStepParameter = nextStep != null ?
                new ObjectParameter("NextStep", nextStep) :
                new ObjectParameter("NextStep", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRequestStage", requestIDParameter, stageIDParameter, nextStepParameter, updatedByParameter);
        }
    
        public virtual int CardsFeedbackValidation_Insert(Nullable<int> uploadRequestID, Nullable<int> tVTCStudentNo, string fullName, string nationalID, string hijriDate, string arabicFirstName, string arabicSecondName, string arabicFourthName, string s, string gender, string staticNo, string reply, string cardNo, string bankAccountNumber, Nullable<int> uploadRejectionReasonID, string createdBy, string updatedBy)
        {
            var uploadRequestIDParameter = uploadRequestID.HasValue ?
                new ObjectParameter("UploadRequestID", uploadRequestID) :
                new ObjectParameter("UploadRequestID", typeof(int));
    
            var tVTCStudentNoParameter = tVTCStudentNo.HasValue ?
                new ObjectParameter("TVTCStudentNo", tVTCStudentNo) :
                new ObjectParameter("TVTCStudentNo", typeof(int));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var hijriDateParameter = hijriDate != null ?
                new ObjectParameter("HijriDate", hijriDate) :
                new ObjectParameter("HijriDate", typeof(string));
    
            var arabicFirstNameParameter = arabicFirstName != null ?
                new ObjectParameter("ArabicFirstName", arabicFirstName) :
                new ObjectParameter("ArabicFirstName", typeof(string));
    
            var arabicSecondNameParameter = arabicSecondName != null ?
                new ObjectParameter("ArabicSecondName", arabicSecondName) :
                new ObjectParameter("ArabicSecondName", typeof(string));
    
            var arabicFourthNameParameter = arabicFourthName != null ?
                new ObjectParameter("ArabicFourthName", arabicFourthName) :
                new ObjectParameter("ArabicFourthName", typeof(string));
    
            var sParameter = s != null ?
                new ObjectParameter("S", s) :
                new ObjectParameter("S", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var staticNoParameter = staticNo != null ?
                new ObjectParameter("StaticNo", staticNo) :
                new ObjectParameter("StaticNo", typeof(string));
    
            var replyParameter = reply != null ?
                new ObjectParameter("Reply", reply) :
                new ObjectParameter("Reply", typeof(string));
    
            var cardNoParameter = cardNo != null ?
                new ObjectParameter("CardNo", cardNo) :
                new ObjectParameter("CardNo", typeof(string));
    
            var bankAccountNumberParameter = bankAccountNumber != null ?
                new ObjectParameter("BankAccountNumber", bankAccountNumber) :
                new ObjectParameter("BankAccountNumber", typeof(string));
    
            var uploadRejectionReasonIDParameter = uploadRejectionReasonID.HasValue ?
                new ObjectParameter("UploadRejectionReasonID", uploadRejectionReasonID) :
                new ObjectParameter("UploadRejectionReasonID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CardsFeedbackValidation_Insert", uploadRequestIDParameter, tVTCStudentNoParameter, fullNameParameter, nationalIDParameter, hijriDateParameter, arabicFirstNameParameter, arabicSecondNameParameter, arabicFourthNameParameter, sParameter, genderParameter, staticNoParameter, replyParameter, cardNoParameter, bankAccountNumberParameter, uploadRejectionReasonIDParameter, createdByParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<CardsRequest_SelectById_Result> CardsRequest_SelectById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CardsRequest_SelectById_Result>("CardsRequest_SelectById", iDParameter);
        }
    
        public virtual ObjectResult<CardsRequest_SelectByUploadRequestId_Result> CardsRequest_SelectByUploadRequestId(Nullable<int> uploadRequestID)
        {
            var uploadRequestIDParameter = uploadRequestID.HasValue ?
                new ObjectParameter("UploadRequestID", uploadRequestID) :
                new ObjectParameter("UploadRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CardsRequest_SelectByUploadRequestId_Result>("CardsRequest_SelectByUploadRequestId", uploadRequestIDParameter);
        }
    
        public virtual ObjectResult<Enrollment_GetEnrollmentID_Result> Enrollment_GetEnrollmentID(Nullable<int> tVTCStudentNo, string nationlID, Nullable<int> collegeID)
        {
            var tVTCStudentNoParameter = tVTCStudentNo.HasValue ?
                new ObjectParameter("TVTCStudentNo", tVTCStudentNo) :
                new ObjectParameter("TVTCStudentNo", typeof(int));
    
            var nationlIDParameter = nationlID != null ?
                new ObjectParameter("NationlID", nationlID) :
                new ObjectParameter("NationlID", typeof(string));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Enrollment_GetEnrollmentID_Result>("Enrollment_GetEnrollmentID", tVTCStudentNoParameter, nationlIDParameter, collegeIDParameter);
        }
    
        public virtual int StudentCardsRequest_Insert(Nullable<int> enrollmentID, Nullable<int> cardsFeedbackStatusID, string cardNo, string bankAccountNumber, Nullable<int> cardsRequestID, string createdBy, string updatedBy)
        {
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            var cardsFeedbackStatusIDParameter = cardsFeedbackStatusID.HasValue ?
                new ObjectParameter("CardsFeedbackStatusID", cardsFeedbackStatusID) :
                new ObjectParameter("CardsFeedbackStatusID", typeof(int));
    
            var cardNoParameter = cardNo != null ?
                new ObjectParameter("CardNo", cardNo) :
                new ObjectParameter("CardNo", typeof(string));
    
            var bankAccountNumberParameter = bankAccountNumber != null ?
                new ObjectParameter("BankAccountNumber", bankAccountNumber) :
                new ObjectParameter("BankAccountNumber", typeof(string));
    
            var cardsRequestIDParameter = cardsRequestID.HasValue ?
                new ObjectParameter("CardsRequestID", cardsRequestID) :
                new ObjectParameter("CardsRequestID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentCardsRequest_Insert", enrollmentIDParameter, cardsFeedbackStatusIDParameter, cardNoParameter, bankAccountNumberParameter, cardsRequestIDParameter, createdByParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<GetCurrentAcademicYearTermByAcademicYearId_Result> GetCurrentAcademicYearTermByAcademicYearId(Nullable<int> academicYearID)
        {
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCurrentAcademicYearTermByAcademicYearId_Result>("GetCurrentAcademicYearTermByAcademicYearId", academicYearIDParameter);
        }
    
        public virtual int EnrollmentCollegeSponserInsert(Nullable<int> enrollmentID, Nullable<int> collegeSponserID, string userName)
        {
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            var collegeSponserIDParameter = collegeSponserID.HasValue ?
                new ObjectParameter("CollegeSponserID", collegeSponserID) :
                new ObjectParameter("CollegeSponserID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EnrollmentCollegeSponserInsert", enrollmentIDParameter, collegeSponserIDParameter, userNameParameter);
        }
    
        public virtual int EnrollmentCollegeSponserUpdate(Nullable<int> enrollmentID, Nullable<int> collegeSponserID, string userName)
        {
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            var collegeSponserIDParameter = collegeSponserID.HasValue ?
                new ObjectParameter("CollegeSponserID", collegeSponserID) :
                new ObjectParameter("CollegeSponserID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EnrollmentCollegeSponserUpdate", enrollmentIDParameter, collegeSponserIDParameter, userNameParameter);
        }
    
        public virtual ObjectResult<uspGetTermEnrollmentList_Result> uspGetTermEnrollmentList(string loginName, string fullName, string nationalId, Nullable<int> collegeId, Nullable<int> spectializationId, Nullable<int> statusId, Nullable<int> stagId, Nullable<int> academicYearID, Nullable<int> academicYearTermID)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var nationalIdParameter = nationalId != null ?
                new ObjectParameter("NationalId", nationalId) :
                new ObjectParameter("NationalId", typeof(string));
    
            var collegeIdParameter = collegeId.HasValue ?
                new ObjectParameter("CollegeId", collegeId) :
                new ObjectParameter("CollegeId", typeof(int));
    
            var spectializationIdParameter = spectializationId.HasValue ?
                new ObjectParameter("SpectializationId", spectializationId) :
                new ObjectParameter("SpectializationId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var stagIdParameter = stagId.HasValue ?
                new ObjectParameter("StagId", stagId) :
                new ObjectParameter("StagId", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTermEnrollmentList_Result>("uspGetTermEnrollmentList", loginNameParameter, fullNameParameter, nationalIdParameter, collegeIdParameter, spectializationIdParameter, statusIdParameter, stagIdParameter, academicYearIDParameter, academicYearTermIDParameter);
        }
    
        public virtual ObjectResult<uspPrintStudentGraduationCertification_Result> uspPrintStudentGraduationCertification(Nullable<int> enrollmentID)
        {
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspPrintStudentGraduationCertification_Result>("uspPrintStudentGraduationCertification", enrollmentIDParameter);
        }
    
        public virtual ObjectResult<uspGetUserDashboardStatistics_Result> uspGetUserDashboardStatistics(string loginName, Nullable<int> academicYearID, Nullable<int> statusID, Nullable<int> collegeID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endtDate)
        {
            var loginNameParameter = loginName != null ?
                new ObjectParameter("LoginName", loginName) :
                new ObjectParameter("LoginName", typeof(string));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endtDateParameter = endtDate.HasValue ?
                new ObjectParameter("EndtDate", endtDate) :
                new ObjectParameter("EndtDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUserDashboardStatistics_Result>("uspGetUserDashboardStatistics", loginNameParameter, academicYearIDParameter, statusIDParameter, collegeIDParameter, startDateParameter, endtDateParameter);
        }
    
        public virtual ObjectResult<uspGetCollegeAcademicYearTerms_Bak_Result> uspGetCollegeAcademicYearTerms_Bak(Nullable<int> collegeID, Nullable<int> enrollmentID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetCollegeAcademicYearTerms_Bak_Result>("uspGetCollegeAcademicYearTerms_Bak", collegeIDParameter, enrollmentIDParameter);
        }
    
        public virtual int AddAlert(Nullable<System.Guid> userDisplayID, Nullable<int> stageID, string content, string url, Nullable<int> alertTypeID, string createdBy, string updatedBy, string contentAr, Nullable<int> collegeID, Nullable<int> roleCode)
        {
            var userDisplayIDParameter = userDisplayID.HasValue ?
                new ObjectParameter("UserDisplayID", userDisplayID) :
                new ObjectParameter("UserDisplayID", typeof(System.Guid));
    
            var stageIDParameter = stageID.HasValue ?
                new ObjectParameter("StageID", stageID) :
                new ObjectParameter("StageID", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var alertTypeIDParameter = alertTypeID.HasValue ?
                new ObjectParameter("AlertTypeID", alertTypeID) :
                new ObjectParameter("AlertTypeID", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var contentArParameter = contentAr != null ?
                new ObjectParameter("ContentAr", contentAr) :
                new ObjectParameter("ContentAr", typeof(string));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var roleCodeParameter = roleCode.HasValue ?
                new ObjectParameter("RoleCode", roleCode) :
                new ObjectParameter("RoleCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddAlert", userDisplayIDParameter, stageIDParameter, contentParameter, urlParameter, alertTypeIDParameter, createdByParameter, updatedByParameter, contentArParameter, collegeIDParameter, roleCodeParameter);
        }
    
        public virtual int AddUserActivity(string actionPerformed, string actionPerformedAr, string createdBy, string updatedBy, Nullable<int> stageID, string actionBy)
        {
            var actionPerformedParameter = actionPerformed != null ?
                new ObjectParameter("ActionPerformed", actionPerformed) :
                new ObjectParameter("ActionPerformed", typeof(string));
    
            var actionPerformedArParameter = actionPerformedAr != null ?
                new ObjectParameter("ActionPerformedAr", actionPerformedAr) :
                new ObjectParameter("ActionPerformedAr", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var stageIDParameter = stageID.HasValue ?
                new ObjectParameter("StageID", stageID) :
                new ObjectParameter("StageID", typeof(int));
    
            var actionByParameter = actionBy != null ?
                new ObjectParameter("ActionBy", actionBy) :
                new ObjectParameter("ActionBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUserActivity", actionPerformedParameter, actionPerformedArParameter, createdByParameter, updatedByParameter, stageIDParameter, actionByParameter);
        }
    
        public virtual int UpdateUnseenAlertsToSeenByUserDisplayIDAndLastSeenOn(Nullable<System.Guid> userDisplayID, Nullable<System.DateTime> lastSeenOn)
        {
            var userDisplayIDParameter = userDisplayID.HasValue ?
                new ObjectParameter("UserDisplayID", userDisplayID) :
                new ObjectParameter("UserDisplayID", typeof(System.Guid));
    
            var lastSeenOnParameter = lastSeenOn.HasValue ?
                new ObjectParameter("LastSeenOn", lastSeenOn) :
                new ObjectParameter("LastSeenOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUnseenAlertsToSeenByUserDisplayIDAndLastSeenOn", userDisplayIDParameter, lastSeenOnParameter);
        }
    
        public virtual int UpdateSystemSettingsForRequest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSystemSettingsForRequest");
        }
    
        public virtual int uspTermEnrollment_Deferred(Nullable<int> enrollmentID, string academicYearTermIDs, Nullable<int> collegeSpecializationID, Nullable<int> stageID, string userName)
        {
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            var academicYearTermIDsParameter = academicYearTermIDs != null ?
                new ObjectParameter("AcademicYearTermIDs", academicYearTermIDs) :
                new ObjectParameter("AcademicYearTermIDs", typeof(string));
    
            var collegeSpecializationIDParameter = collegeSpecializationID.HasValue ?
                new ObjectParameter("CollegeSpecializationID", collegeSpecializationID) :
                new ObjectParameter("CollegeSpecializationID", typeof(int));
    
            var stageIDParameter = stageID.HasValue ?
                new ObjectParameter("StageID", stageID) :
                new ObjectParameter("StageID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTermEnrollment_Deferred", enrollmentIDParameter, academicYearTermIDsParameter, collegeSpecializationIDParameter, stageIDParameter, userNameParameter);
        }
    
        public virtual int uspTermEnrollmentUpdateStage(string termEnrollmentIds, Nullable<int> stageID, string userName)
        {
            var termEnrollmentIdsParameter = termEnrollmentIds != null ?
                new ObjectParameter("TermEnrollmentIds", termEnrollmentIds) :
                new ObjectParameter("TermEnrollmentIds", typeof(string));
    
            var stageIDParameter = stageID.HasValue ?
                new ObjectParameter("StageID", stageID) :
                new ObjectParameter("StageID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTermEnrollmentUpdateStage", termEnrollmentIdsParameter, stageIDParameter, userNameParameter);
        }
    
        public virtual ObjectResult<CalculateStudentPayment_Result> CalculateStudentPayment(Nullable<int> collegeID, Nullable<int> academicYearTermID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalculateStudentPayment_Result>("CalculateStudentPayment", collegeIDParameter, academicYearTermIDParameter);
        }
    
        public virtual ObjectResult<CollegePayment_SelectByRequestID_Result> CollegePayment_SelectByRequestID(Nullable<int> paymentRequestID)
        {
            var paymentRequestIDParameter = paymentRequestID.HasValue ?
                new ObjectParameter("PaymentRequestID", paymentRequestID) :
                new ObjectParameter("PaymentRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CollegePayment_SelectByRequestID_Result>("CollegePayment_SelectByRequestID", paymentRequestIDParameter);
        }
    
        public virtual int CollegePayment_Update(Nullable<int> iD, Nullable<int> progressCounter, Nullable<int> paymentRequestStatusID, Nullable<decimal> actualPaymentAmount, Nullable<decimal> effectivePaymentAmount, Nullable<decimal> calculatedPaymentAmount)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var progressCounterParameter = progressCounter.HasValue ?
                new ObjectParameter("ProgressCounter", progressCounter) :
                new ObjectParameter("ProgressCounter", typeof(int));
    
            var paymentRequestStatusIDParameter = paymentRequestStatusID.HasValue ?
                new ObjectParameter("PaymentRequestStatusID", paymentRequestStatusID) :
                new ObjectParameter("PaymentRequestStatusID", typeof(int));
    
            var actualPaymentAmountParameter = actualPaymentAmount.HasValue ?
                new ObjectParameter("ActualPaymentAmount", actualPaymentAmount) :
                new ObjectParameter("ActualPaymentAmount", typeof(decimal));
    
            var effectivePaymentAmountParameter = effectivePaymentAmount.HasValue ?
                new ObjectParameter("EffectivePaymentAmount", effectivePaymentAmount) :
                new ObjectParameter("EffectivePaymentAmount", typeof(decimal));
    
            var calculatedPaymentAmountParameter = calculatedPaymentAmount.HasValue ?
                new ObjectParameter("CalculatedPaymentAmount", calculatedPaymentAmount) :
                new ObjectParameter("CalculatedPaymentAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CollegePayment_Update", iDParameter, progressCounterParameter, paymentRequestStatusIDParameter, actualPaymentAmountParameter, effectivePaymentAmountParameter, calculatedPaymentAmountParameter);
        }
    
        public virtual int PaymentRequest_Update(Nullable<int> iD, Nullable<int> progressCounter, Nullable<int> paymentRequestStatusID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var progressCounterParameter = progressCounter.HasValue ?
                new ObjectParameter("ProgressCounter", progressCounter) :
                new ObjectParameter("ProgressCounter", typeof(int));
    
            var paymentRequestStatusIDParameter = paymentRequestStatusID.HasValue ?
                new ObjectParameter("PaymentRequestStatusID", paymentRequestStatusID) :
                new ObjectParameter("PaymentRequestStatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PaymentRequest_Update", iDParameter, progressCounterParameter, paymentRequestStatusIDParameter);
        }
    
        public virtual ObjectResult<PaymentSetting_SelectByCollegeAndTerm_Result> PaymentSetting_SelectByCollegeAndTerm(Nullable<int> collegeID, Nullable<int> academicYearTermID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaymentSetting_SelectByCollegeAndTerm_Result>("PaymentSetting_SelectByCollegeAndTerm", collegeIDParameter, academicYearTermIDParameter);
        }
    
        public virtual ObjectResult<SelectStudentsAttendancePerPeriod_ByCollegeAndTerm_Result> SelectStudentsAttendancePerPeriod_ByCollegeAndTerm(Nullable<int> collegeID, Nullable<int> academicYearTermID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStudentsAttendancePerPeriod_ByCollegeAndTerm_Result>("SelectStudentsAttendancePerPeriod_ByCollegeAndTerm", collegeIDParameter, academicYearTermIDParameter);
        }
    
        public virtual ObjectResult<SelectStudentsCourseAttendance_ByCollegeAndTerm_Result> SelectStudentsCourseAttendance_ByCollegeAndTerm(Nullable<int> collegeID, Nullable<int> academicYearTermID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectStudentsCourseAttendance_ByCollegeAndTerm_Result>("SelectStudentsCourseAttendance_ByCollegeAndTerm", collegeIDParameter, academicYearTermIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AcademicYear_GetCurrent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AcademicYear_GetCurrent");
        }
    
        public virtual ObjectResult<CardsRequest_GetStudentsByRequestId_Result> CardsRequest_GetStudentsByRequestId(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CardsRequest_GetStudentsByRequestId_Result>("CardsRequest_GetStudentsByRequestId", iDParameter);
        }
    
        public virtual int CardsRequest_UpdateNoReplyStudents(Nullable<int> iD, string updatedBy)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CardsRequest_UpdateNoReplyStudents", iDParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<College_GetByID_Result> College_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<College_GetByID_Result>("College_GetByID", iDParameter);
        }
    
        public virtual ObjectResult<DisabilityLevel_GetDisabilityLevels_Result> DisabilityLevel_GetDisabilityLevels()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DisabilityLevel_GetDisabilityLevels_Result>("DisabilityLevel_GetDisabilityLevels");
        }
    
        public virtual ObjectResult<Enrollment_GetEnrolledStudentsByCollegeAndTerm_Result> Enrollment_GetEnrolledStudentsByCollegeAndTerm(Nullable<int> collegeID, Nullable<int> academicYearTermID, Nullable<int> type, Nullable<int> periodID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Enrollment_GetEnrolledStudentsByCollegeAndTerm_Result>("Enrollment_GetEnrolledStudentsByCollegeAndTerm", collegeIDParameter, academicYearTermIDParameter, typeParameter, periodIDParameter);
        }
    
        public virtual ObjectResult<Period_GetByCollegeAndStipendMonthAndAcademicYear_Result> Period_GetByCollegeAndStipendMonthAndAcademicYear(Nullable<int> collegeID, Nullable<int> stipendMonthID, Nullable<int> academicYearID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var stipendMonthIDParameter = stipendMonthID.HasValue ?
                new ObjectParameter("StipendMonthID", stipendMonthID) :
                new ObjectParameter("StipendMonthID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Period_GetByCollegeAndStipendMonthAndAcademicYear_Result>("Period_GetByCollegeAndStipendMonthAndAcademicYear", collegeIDParameter, stipendMonthIDParameter, academicYearIDParameter);
        }
    
        public virtual ObjectResult<StipendMonth_GetByID_Result> StipendMonth_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StipendMonth_GetByID_Result>("StipendMonth_GetByID", iDParameter);
        }
    
        public virtual ObjectResult<StipendMonth_GetByMonthIdAndYearId_Result> StipendMonth_GetByMonthIdAndYearId(Nullable<int> monthID, Nullable<int> yearID)
        {
            var monthIDParameter = monthID.HasValue ?
                new ObjectParameter("MonthID", monthID) :
                new ObjectParameter("MonthID", typeof(int));
    
            var yearIDParameter = yearID.HasValue ?
                new ObjectParameter("YearID", yearID) :
                new ObjectParameter("YearID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StipendMonth_GetByMonthIdAndYearId_Result>("StipendMonth_GetByMonthIdAndYearId", monthIDParameter, yearIDParameter);
        }
    
        public virtual ObjectResult<StipendsRequest_GetByID_Result> StipendsRequest_GetByID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StipendsRequest_GetByID_Result>("StipendsRequest_GetByID", iDParameter);
        }
    
        public virtual ObjectResult<StipendsRequest_Insert_Result> StipendsRequest_Insert(Nullable<int> collegeID, Nullable<int> stipendMonthID, Nullable<int> requestStatusID, Nullable<int> noOfStudents, Nullable<int> fileAutoGenerationStatusID, string fileFooterNo, Nullable<int> requestType, string createdBy, string updatedBy)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var stipendMonthIDParameter = stipendMonthID.HasValue ?
                new ObjectParameter("StipendMonthID", stipendMonthID) :
                new ObjectParameter("StipendMonthID", typeof(int));
    
            var requestStatusIDParameter = requestStatusID.HasValue ?
                new ObjectParameter("RequestStatusID", requestStatusID) :
                new ObjectParameter("RequestStatusID", typeof(int));
    
            var noOfStudentsParameter = noOfStudents.HasValue ?
                new ObjectParameter("NoOfStudents", noOfStudents) :
                new ObjectParameter("NoOfStudents", typeof(int));
    
            var fileAutoGenerationStatusIDParameter = fileAutoGenerationStatusID.HasValue ?
                new ObjectParameter("FileAutoGenerationStatusID", fileAutoGenerationStatusID) :
                new ObjectParameter("FileAutoGenerationStatusID", typeof(int));
    
            var fileFooterNoParameter = fileFooterNo != null ?
                new ObjectParameter("FileFooterNo", fileFooterNo) :
                new ObjectParameter("FileFooterNo", typeof(string));
    
            var requestTypeParameter = requestType.HasValue ?
                new ObjectParameter("RequestType", requestType) :
                new ObjectParameter("RequestType", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StipendsRequest_Insert_Result>("StipendsRequest_Insert", collegeIDParameter, stipendMonthIDParameter, requestStatusIDParameter, noOfStudentsParameter, fileAutoGenerationStatusIDParameter, fileFooterNoParameter, requestTypeParameter, createdByParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<StipendsRequest_Update_Result> StipendsRequest_Update(Nullable<int> iD, Nullable<int> noOfStudents, Nullable<int> noOfAccepted, Nullable<int> noOfRejected, string fileUrl, Nullable<int> requestStatusID, Nullable<int> fileAutoGenerationStatusID, Nullable<int> fileGenerationProgress, string updatedBy, string fileFooterNo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var noOfStudentsParameter = noOfStudents.HasValue ?
                new ObjectParameter("NoOfStudents", noOfStudents) :
                new ObjectParameter("NoOfStudents", typeof(int));
    
            var noOfAcceptedParameter = noOfAccepted.HasValue ?
                new ObjectParameter("NoOfAccepted", noOfAccepted) :
                new ObjectParameter("NoOfAccepted", typeof(int));
    
            var noOfRejectedParameter = noOfRejected.HasValue ?
                new ObjectParameter("NoOfRejected", noOfRejected) :
                new ObjectParameter("NoOfRejected", typeof(int));
    
            var fileUrlParameter = fileUrl != null ?
                new ObjectParameter("FileUrl", fileUrl) :
                new ObjectParameter("FileUrl", typeof(string));
    
            var requestStatusIDParameter = requestStatusID.HasValue ?
                new ObjectParameter("RequestStatusID", requestStatusID) :
                new ObjectParameter("RequestStatusID", typeof(int));
    
            var fileAutoGenerationStatusIDParameter = fileAutoGenerationStatusID.HasValue ?
                new ObjectParameter("FileAutoGenerationStatusID", fileAutoGenerationStatusID) :
                new ObjectParameter("FileAutoGenerationStatusID", typeof(int));
    
            var fileGenerationProgressParameter = fileGenerationProgress.HasValue ?
                new ObjectParameter("FileGenerationProgress", fileGenerationProgress) :
                new ObjectParameter("FileGenerationProgress", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var fileFooterNoParameter = fileFooterNo != null ?
                new ObjectParameter("FileFooterNo", fileFooterNo) :
                new ObjectParameter("FileFooterNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StipendsRequest_Update_Result>("StipendsRequest_Update", iDParameter, noOfStudentsParameter, noOfAcceptedParameter, noOfRejectedParameter, fileUrlParameter, requestStatusIDParameter, fileAutoGenerationStatusIDParameter, fileGenerationProgressParameter, updatedByParameter, fileFooterNoParameter);
        }
    
        public virtual int StudentCard_InsertOrUpdate(Nullable<int> enrollmentID)
        {
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentCard_InsertOrUpdate", enrollmentIDParameter);
        }
    
        public virtual ObjectResult<StudentCardsRequest_SelectByRequestIdAndEnrollmentId_Result> StudentCardsRequest_SelectByRequestIdAndEnrollmentId(Nullable<int> enrollmentID, Nullable<int> cardsRequestID)
        {
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            var cardsRequestIDParameter = cardsRequestID.HasValue ?
                new ObjectParameter("CardsRequestID", cardsRequestID) :
                new ObjectParameter("CardsRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentCardsRequest_SelectByRequestIdAndEnrollmentId_Result>("StudentCardsRequest_SelectByRequestIdAndEnrollmentId", enrollmentIDParameter, cardsRequestIDParameter);
        }
    
        public virtual int StudentCardsRequest_Update(Nullable<int> enrollmentID, Nullable<int> cardsFeedbackStatusID, Nullable<int> cardsFeedbackDenialReasonID, string cardNo, string bankIBAN, Nullable<int> cardsRequestID, string updatedBy)
        {
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            var cardsFeedbackStatusIDParameter = cardsFeedbackStatusID.HasValue ?
                new ObjectParameter("CardsFeedbackStatusID", cardsFeedbackStatusID) :
                new ObjectParameter("CardsFeedbackStatusID", typeof(int));
    
            var cardsFeedbackDenialReasonIDParameter = cardsFeedbackDenialReasonID.HasValue ?
                new ObjectParameter("CardsFeedbackDenialReasonID", cardsFeedbackDenialReasonID) :
                new ObjectParameter("CardsFeedbackDenialReasonID", typeof(int));
    
            var cardNoParameter = cardNo != null ?
                new ObjectParameter("CardNo", cardNo) :
                new ObjectParameter("CardNo", typeof(string));
    
            var bankIBANParameter = bankIBAN != null ?
                new ObjectParameter("BankIBAN", bankIBAN) :
                new ObjectParameter("BankIBAN", typeof(string));
    
            var cardsRequestIDParameter = cardsRequestID.HasValue ?
                new ObjectParameter("CardsRequestID", cardsRequestID) :
                new ObjectParameter("CardsRequestID", typeof(int));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentCardsRequest_Update", enrollmentIDParameter, cardsFeedbackStatusIDParameter, cardsFeedbackDenialReasonIDParameter, cardNoParameter, bankIBANParameter, cardsRequestIDParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<StudentStipendsRequest_GetByStipendsRequestID_Result> StudentStipendsRequest_GetByStipendsRequestID(Nullable<int> stipendsRequestID)
        {
            var stipendsRequestIDParameter = stipendsRequestID.HasValue ?
                new ObjectParameter("StipendsRequestID", stipendsRequestID) :
                new ObjectParameter("StipendsRequestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentStipendsRequest_GetByStipendsRequestID_Result>("StudentStipendsRequest_GetByStipendsRequestID", stipendsRequestIDParameter);
        }
    
        public virtual ObjectResult<uspGetTermEnrollmentHistory_Result> uspGetTermEnrollmentHistory(string nationalId, Nullable<int> enrollmentID)
        {
            var nationalIdParameter = nationalId != null ?
                new ObjectParameter("NationalId", nationalId) :
                new ObjectParameter("NationalId", typeof(string));
    
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTermEnrollmentHistory_Result>("uspGetTermEnrollmentHistory", nationalIdParameter, enrollmentIDParameter);
        }
    
        public virtual ObjectResult<uspGetEnrollmentExamsResult_Result> uspGetEnrollmentExamsResult(string nationalId, Nullable<int> enrollmentID)
        {
            var nationalIdParameter = nationalId != null ?
                new ObjectParameter("NationalId", nationalId) :
                new ObjectParameter("NationalId", typeof(string));
    
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetEnrollmentExamsResult_Result>("uspGetEnrollmentExamsResult", nationalIdParameter, enrollmentIDParameter);
        }
    
        public virtual ObjectResult<uspGetCollegeAcademicYearTerms_Result> uspGetCollegeAcademicYearTerms(Nullable<int> collegeID, Nullable<int> enrollmentID, Nullable<bool> isContractSpecialist)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var enrollmentIDParameter = enrollmentID.HasValue ?
                new ObjectParameter("EnrollmentID", enrollmentID) :
                new ObjectParameter("EnrollmentID", typeof(int));
    
            var isContractSpecialistParameter = isContractSpecialist.HasValue ?
                new ObjectParameter("IsContractSpecialist", isContractSpecialist) :
                new ObjectParameter("IsContractSpecialist", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetCollegeAcademicYearTerms_Result>("uspGetCollegeAcademicYearTerms", collegeIDParameter, enrollmentIDParameter, isContractSpecialistParameter);
        }
    
        public virtual ObjectResult<GetSubProgramStudentsCounts_Result> GetSubProgramStudentsCounts(Nullable<int> subProgramID, string intakeTermIDs)
        {
            var subProgramIDParameter = subProgramID.HasValue ?
                new ObjectParameter("SubProgramID", subProgramID) :
                new ObjectParameter("SubProgramID", typeof(int));
    
            var intakeTermIDsParameter = intakeTermIDs != null ?
                new ObjectParameter("IntakeTermIDs", intakeTermIDs) :
                new ObjectParameter("IntakeTermIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubProgramStudentsCounts_Result>("GetSubProgramStudentsCounts", subProgramIDParameter, intakeTermIDsParameter);
        }
    
        public virtual ObjectResult<GetSubProgramStudentsSummary_Result> GetSubProgramStudentsSummary(Nullable<int> subProgramID, string intakeTermIDs)
        {
            var subProgramIDParameter = subProgramID.HasValue ?
                new ObjectParameter("SubProgramID", subProgramID) :
                new ObjectParameter("SubProgramID", typeof(int));
    
            var intakeTermIDsParameter = intakeTermIDs != null ?
                new ObjectParameter("IntakeTermIDs", intakeTermIDs) :
                new ObjectParameter("IntakeTermIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubProgramStudentsSummary_Result>("GetSubProgramStudentsSummary", subProgramIDParameter, intakeTermIDsParameter);
        }
    
        public virtual ObjectResult<uspGetAllRequests_Result> uspGetAllRequests(string nationalIds, string userName, Nullable<bool> isStudent)
        {
            var nationalIdsParameter = nationalIds != null ?
                new ObjectParameter("NationalIds", nationalIds) :
                new ObjectParameter("NationalIds", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isStudentParameter = isStudent.HasValue ?
                new ObjectParameter("IsStudent", isStudent) :
                new ObjectParameter("IsStudent", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAllRequests_Result>("uspGetAllRequests", nationalIdsParameter, userNameParameter, isStudentParameter);
        }
    
        public virtual ObjectResult<uspGetUsersByEmployerIdAndRoleId_Result> uspGetUsersByEmployerIdAndRoleId(Nullable<int> employerId, Nullable<System.Guid> roleId)
        {
            var employerIdParameter = employerId.HasValue ?
                new ObjectParameter("EmployerId", employerId) :
                new ObjectParameter("EmployerId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUsersByEmployerIdAndRoleId_Result>("uspGetUsersByEmployerIdAndRoleId", employerIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<GetTeacherLectures_Result> GetTeacherLectures(Nullable<System.Guid> teacherID, Nullable<int> sectionID, Nullable<int> collegeID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var teacherIDParameter = teacherID.HasValue ?
                new ObjectParameter("TeacherID", teacherID) :
                new ObjectParameter("TeacherID", typeof(System.Guid));
    
            var sectionIDParameter = sectionID.HasValue ?
                new ObjectParameter("SectionID", sectionID) :
                new ObjectParameter("SectionID", typeof(int));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeacherLectures_Result>("GetTeacherLectures", teacherIDParameter, sectionIDParameter, collegeIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<uspGetUsersByRoleId_Result1> uspGetUsersByRoleId(Nullable<System.Guid> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUsersByRoleId_Result1>("uspGetUsersByRoleId", roleIdParameter);
        }
    
        public virtual ObjectResult<sp_CalculateFinalExamResult_Result> sp_CalculateFinalExamResult(Nullable<int> collegeID, Nullable<int> specializationID, Nullable<int> academicYearTermID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var specializationIDParameter = specializationID.HasValue ?
                new ObjectParameter("SpecializationID", specializationID) :
                new ObjectParameter("SpecializationID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CalculateFinalExamResult_Result>("sp_CalculateFinalExamResult", collegeIDParameter, specializationIDParameter, academicYearTermIDParameter);
        }
    
        public virtual ObjectResult<GetTeachersRecordedLectures_Result> GetTeachersRecordedLectures(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeachersRecordedLectures_Result>("GetTeachersRecordedLectures", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetTeachersWithRequiredLectures_Result> GetTeachersWithRequiredLectures(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeachersWithRequiredLectures_Result>("GetTeachersWithRequiredLectures", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<uspGetTraineeGradesForSpecialization_Result> uspGetTraineeGradesForSpecialization(string nationalID, string specializationCode, Nullable<int> collegeID, Nullable<int> academicYearTermID, string exambookingCode, Nullable<int> assessmentComponentID)
        {
            var nationalIDParameter = nationalID != null ?
                new ObjectParameter("NationalID", nationalID) :
                new ObjectParameter("NationalID", typeof(string));
    
            var specializationCodeParameter = specializationCode != null ?
                new ObjectParameter("SpecializationCode", specializationCode) :
                new ObjectParameter("SpecializationCode", typeof(string));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            var exambookingCodeParameter = exambookingCode != null ?
                new ObjectParameter("ExambookingCode", exambookingCode) :
                new ObjectParameter("ExambookingCode", typeof(string));
    
            var assessmentComponentIDParameter = assessmentComponentID.HasValue ?
                new ObjectParameter("AssessmentComponentID", assessmentComponentID) :
                new ObjectParameter("AssessmentComponentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTraineeGradesForSpecialization_Result>("uspGetTraineeGradesForSpecialization", nationalIDParameter, specializationCodeParameter, collegeIDParameter, academicYearTermIDParameter, exambookingCodeParameter, assessmentComponentIDParameter);
        }
    
        public virtual int AppendAnCenterIdCollegeGenderBoth(string centerID)
        {
            var centerIDParameter = centerID != null ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AppendAnCenterIdCollegeGenderBoth", centerIDParameter);
        }
    
        public virtual ObjectResult<GetRPLCertificate_Result> GetRPLCertificate(Nullable<int> rPLRequestId)
        {
            var rPLRequestIdParameter = rPLRequestId.HasValue ?
                new ObjectParameter("RPLRequestId", rPLRequestId) :
                new ObjectParameter("RPLRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRPLCertificate_Result>("GetRPLCertificate", rPLRequestIdParameter);
        }
    
        public virtual ObjectResult<ProgramDashBoardApplicationsByStage_Result> ProgramDashBoardApplicationsByStage(Nullable<int> academicYearID, Nullable<int> collegeID, Nullable<int> programID, Nullable<bool> isArabic, string userName)
        {
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));
    
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramDashBoardApplicationsByStage_Result>("ProgramDashBoardApplicationsByStage", academicYearIDParameter, collegeIDParameter, programIDParameter, isArabicParameter, userNameParameter);
        }
    
        public virtual ObjectResult<ProgramDashBoardEnrollmentByStage_Result> ProgramDashBoardEnrollmentByStage(Nullable<int> academicYearID, Nullable<int> collegeID, Nullable<int> programID, Nullable<bool> isArabic, string userName)
        {
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));
    
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramDashBoardEnrollmentByStage_Result>("ProgramDashBoardEnrollmentByStage", academicYearIDParameter, collegeIDParameter, programIDParameter, isArabicParameter, userNameParameter);
        }
    
        public virtual ObjectResult<ProgramDashBoardEnrollmentByStatus_Result> ProgramDashBoardEnrollmentByStatus(Nullable<int> academicYearID, Nullable<int> collegeID, Nullable<int> programID, Nullable<bool> isArabic, string userName)
        {
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));
    
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramDashBoardEnrollmentByStatus_Result>("ProgramDashBoardEnrollmentByStatus", academicYearIDParameter, collegeIDParameter, programIDParameter, isArabicParameter, userNameParameter);
        }
    
        public virtual ObjectResult<ProgramdashBoardEnrollmentCounts_Result> ProgramdashBoardEnrollmentCounts(Nullable<int> academicYearID, Nullable<int> collegeID, Nullable<int> programID, Nullable<bool> isArabic, string userName)
        {
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));
    
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProgramdashBoardEnrollmentCounts_Result>("ProgramdashBoardEnrollmentCounts", academicYearIDParameter, collegeIDParameter, programIDParameter, isArabicParameter, userNameParameter);
        }
    
        public virtual ObjectResult<uspGetQualificationLevelFromRPLRequestCountsBYStages_Result> uspGetQualificationLevelFromRPLRequestCountsBYStages(string stageIdList, Nullable<bool> isArabic)
        {
            var stageIdListParameter = stageIdList != null ?
                new ObjectParameter("StageIdList", stageIdList) :
                new ObjectParameter("StageIdList", typeof(string));
    
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetQualificationLevelFromRPLRequestCountsBYStages_Result>("uspGetQualificationLevelFromRPLRequestCountsBYStages", stageIdListParameter, isArabicParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainerCertificate_Result> uspGetOSHTrainerCertificate(Nullable<long> enrollmentId)
        {
            var enrollmentIdParameter = enrollmentId.HasValue ?
                new ObjectParameter("EnrollmentId", enrollmentId) :
                new ObjectParameter("EnrollmentId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainerCertificate_Result>("uspGetOSHTrainerCertificate", enrollmentIdParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainingProcessSummary_Result> uspGetOSHTrainingProcessSummary(Nullable<int> academicYearTermId)
        {
            var academicYearTermIdParameter = academicYearTermId.HasValue ?
                new ObjectParameter("AcademicYearTermId", academicYearTermId) :
                new ObjectParameter("AcademicYearTermId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainingProcessSummary_Result>("uspGetOSHTrainingProcessSummary", academicYearTermIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> uspGetOSHTrainingStatisticsTraineesAllAttendence(Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("uspGetOSHTrainingStatisticsTraineesAllAttendence", regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOSHTrainingStatisticsTraineesAllCount(Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOSHTrainingStatisticsTraineesAllCount", regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainingStatisticsTraineesAttendencePerCenters_Result> uspGetOSHTrainingStatisticsTraineesAttendencePerCenters(Nullable<bool> isArabic, Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainingStatisticsTraineesAttendencePerCenters_Result>("uspGetOSHTrainingStatisticsTraineesAttendencePerCenters", isArabicParameter, regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainingStatisticsTraineesAttendencePerRegion_Result> uspGetOSHTrainingStatisticsTraineesAttendencePerRegion(Nullable<bool> isArabic, Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainingStatisticsTraineesAttendencePerRegion_Result>("uspGetOSHTrainingStatisticsTraineesAttendencePerRegion", isArabicParameter, regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainingStatisticsTraineesCountPerBatch_Result> uspGetOSHTrainingStatisticsTraineesCountPerBatch(Nullable<bool> isArabic, Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainingStatisticsTraineesCountPerBatch_Result>("uspGetOSHTrainingStatisticsTraineesCountPerBatch", isArabicParameter, regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainingStatisticsTraineesCountPerCenter_Result> uspGetOSHTrainingStatisticsTraineesCountPerCenter(Nullable<bool> isArabic, Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainingStatisticsTraineesCountPerCenter_Result>("uspGetOSHTrainingStatisticsTraineesCountPerCenter", isArabicParameter, regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainingStatisticsTraineesCountPerRegion_Result> uspGetOSHTrainingStatisticsTraineesCountPerRegion(Nullable<bool> isArabic, Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainingStatisticsTraineesCountPerRegion_Result>("uspGetOSHTrainingStatisticsTraineesCountPerRegion", isArabicParameter, regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainingStatisticsApplicantsForFinalExamPerBatch_Result> uspGetOSHTrainingStatisticsApplicantsForFinalExamPerBatch(Nullable<bool> isArabic, Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainingStatisticsApplicantsForFinalExamPerBatch_Result>("uspGetOSHTrainingStatisticsApplicantsForFinalExamPerBatch", isArabicParameter, regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainingStatisticsApplicantsForFinalExamPerCenter_Result> uspGetOSHTrainingStatisticsApplicantsForFinalExamPerCenter(Nullable<bool> isArabic, Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainingStatisticsApplicantsForFinalExamPerCenter_Result>("uspGetOSHTrainingStatisticsApplicantsForFinalExamPerCenter", isArabicParameter, regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainingStatisticsApplicantsForFinalExamPerRegion_Result> uspGetOSHTrainingStatisticsApplicantsForFinalExamPerRegion(Nullable<bool> isArabic, Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainingStatisticsApplicantsForFinalExamPerRegion_Result>("uspGetOSHTrainingStatisticsApplicantsForFinalExamPerRegion", isArabicParameter, regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainingStatisticsGraduatedTraineesPerBatch_Result> uspGetOSHTrainingStatisticsGraduatedTraineesPerBatch(Nullable<bool> isArabic, Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainingStatisticsGraduatedTraineesPerBatch_Result>("uspGetOSHTrainingStatisticsGraduatedTraineesPerBatch", isArabicParameter, regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainingStatisticsGraduatedTraineesPerCenter_Result> uspGetOSHTrainingStatisticsGraduatedTraineesPerCenter(Nullable<bool> isArabic, Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainingStatisticsGraduatedTraineesPerCenter_Result>("uspGetOSHTrainingStatisticsGraduatedTraineesPerCenter", isArabicParameter, regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<uspGetOSHTrainingStatisticsGraduatedTraineesPerRegion_Result> uspGetOSHTrainingStatisticsGraduatedTraineesPerRegion(Nullable<bool> isArabic, Nullable<int> regionID, Nullable<int> academicYearID, Nullable<int> centerID, Nullable<int> batchID)
        {
            var isArabicParameter = isArabic.HasValue ?
                new ObjectParameter("IsArabic", isArabic) :
                new ObjectParameter("IsArabic", typeof(bool));
    
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var academicYearIDParameter = academicYearID.HasValue ?
                new ObjectParameter("AcademicYearID", academicYearID) :
                new ObjectParameter("AcademicYearID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOSHTrainingStatisticsGraduatedTraineesPerRegion_Result>("uspGetOSHTrainingStatisticsGraduatedTraineesPerRegion", isArabicParameter, regionIDParameter, academicYearIDParameter, centerIDParameter, batchIDParameter);
        }
    
        public virtual ObjectResult<ExamEligibility_Result> ExamEligibility(Nullable<int> programID, Nullable<int> collegeID, Nullable<int> academicYearTermID, Nullable<int> specizalitionID, Nullable<int> isNew)
        {
            var programIDParameter = programID.HasValue ?
                new ObjectParameter("ProgramID", programID) :
                new ObjectParameter("ProgramID", typeof(int));
    
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            var specizalitionIDParameter = specizalitionID.HasValue ?
                new ObjectParameter("SpecizalitionID", specizalitionID) :
                new ObjectParameter("SpecizalitionID", typeof(int));
    
            var isNewParameter = isNew.HasValue ?
                new ObjectParameter("IsNew", isNew) :
                new ObjectParameter("IsNew", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExamEligibility_Result>("ExamEligibility", programIDParameter, collegeIDParameter, academicYearTermIDParameter, specizalitionIDParameter, isNewParameter);
        }
    
        public virtual ObjectResult<FoundationExamEligibility_Result> FoundationExamEligibility(Nullable<int> collegeID, Nullable<int> academicYearTermID)
        {
            var collegeIDParameter = collegeID.HasValue ?
                new ObjectParameter("CollegeID", collegeID) :
                new ObjectParameter("CollegeID", typeof(int));
    
            var academicYearTermIDParameter = academicYearTermID.HasValue ?
                new ObjectParameter("AcademicYearTermID", academicYearTermID) :
                new ObjectParameter("AcademicYearTermID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FoundationExamEligibility_Result>("FoundationExamEligibility", collegeIDParameter, academicYearTermIDParameter);
        }
    
        public virtual ObjectResult<GetRPLExamCertificate_Result> GetRPLExamCertificate(Nullable<int> rPLRequestId)
        {
            var rPLRequestIdParameter = rPLRequestId.HasValue ?
                new ObjectParameter("RPLRequestId", rPLRequestId) :
                new ObjectParameter("RPLRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRPLExamCertificate_Result>("GetRPLExamCertificate", rPLRequestIdParameter);
        }
    
        public virtual ObjectResult<GetExamBookingPaymentInvoice_Result> GetExamBookingPaymentInvoice(Nullable<int> examBookingId, Nullable<bool> isCreditNote)
        {
            var examBookingIdParameter = examBookingId.HasValue ?
                new ObjectParameter("ExamBookingId", examBookingId) :
                new ObjectParameter("ExamBookingId", typeof(int));
    
            var isCreditNoteParameter = isCreditNote.HasValue ?
                new ObjectParameter("IsCreditNote", isCreditNote) :
                new ObjectParameter("IsCreditNote", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExamBookingPaymentInvoice_Result>("GetExamBookingPaymentInvoice", examBookingIdParameter, isCreditNoteParameter);
        }
    }
}
