
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ReSharper disable once CheckNamespace
namespace COE.Survey.BLL
{
    using System;
    using System.Linq;	
    using System.Web;
    using System.Reflection;
    using System.Collections.Generic;
    
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Validation;
    
    using Commons.Framework.Data;
    using Commons.Framework.Logging;
    
    using COE.Survey.BLL.Repositories;
    using COE.Common.Model;
    using COE.Common.DAL;
    
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public sealed partial class COEUoW : IUnitOfWork
    {
        public COEUoW()       
        {
    		this.context = new COEEntities();
            this.DismissRequest = new DismissRequestsRepository(this.context);
            this.AcademicYear = new AcademicYearsRepository(this.context);
            this.AcademicYearTerm = new AcademicYearTermsRepository(this.context);
            this.Area = new AreasRepository(this.context);
            this.City = new CitiesRepository(this.context);
            this.CollegeType = new CollegeTypesRepository(this.context);
            this.Country = new CountriesRepository(this.context);
            this.CourseType = new CourseTypesRepository(this.context);
            this.Level = new LevelsRepository(this.context);
            this.TermCourse = new TermCoursesRepository(this.context);
            this.TermType = new TermTypesRepository(this.context);
            this.AttachmentContents = new AttachmentContentsRepository(this.context);
            this.Attachments = new AttachmentsRepository(this.context);
            this.AttachmentTypes = new AttachmentTypesRepository(this.context);
            this.EnrollmentStatistic = new EnrollmentStatisticsRepository(this.context);
            this.EnrollmentStatisticType = new EnrollmentStatisticTypesRepository(this.context);
            this.SpecializationStatistic = new SpecializationStatisticsRepository(this.context);
            this.TermEnrollmentStatisticSetting = new TermEnrollmentStatisticSettingsRepository(this.context);
            this.AspNetRoles = new AspNetRolesRepository(this.context);
            this.AspNetUserClaims = new AspNetUserClaimsRepository(this.context);
            this.AspNetUserLogins = new AspNetUserLoginsRepository(this.context);
            this.AspNetUsers = new AspNetUsersRepository(this.context);
            this.Decision = new DecisionsRepository(this.context);
            this.Stage = new StagesRepository(this.context);
            this.StageDecision = new StageDecisionsRepository(this.context);
            this.Status = new StatusRepository(this.context);
            this.SectionEnrollment = new SectionEnrollmentsRepository(this.context);
            this.SectionEnrollmentAttendance = new SectionEnrollmentAttendancesRepository(this.context);
            this.DeferralReason = new DeferralReasonsRepository(this.context);
            this.DeferralRequest = new DeferralRequestsRepository(this.context);
            this.DeferralRequestAcademicYearTerm = new DeferralRequestAcademicYearTermsRepository(this.context);
            this.DeferralRequestReason = new DeferralRequestReasonsRepository(this.context);
            this.DismissReason = new DismissReasonsRepository(this.context);
            this.DismissRequestReason = new DismissRequestReasonsRepository(this.context);
            this.EnrollmentRequestDetail = new EnrollmentRequestDetailsRepository(this.context);
            this.Assessment = new AssessmentsRepository(this.context);
            this.EnglishExamResult = new EnglishExamResultsRepository(this.context);
            this.EnglishExamScore = new EnglishExamScoresRepository(this.context);
            this.ExamStatus = new ExamStatusRepository(this.context);
            this.ExamType = new ExamTypesRepository(this.context);
            this.VocationalExamResult = new VocationalExamResultsRepository(this.context);
            this.VocationalExamResultDetail = new VocationalExamResultDetailsRepository(this.context);
            this.VocationalExamScore = new VocationalExamScoresRepository(this.context);
            this.VocationalExamType = new VocationalExamTypesRepository(this.context);
            this.Action = new ActionsRepository(this.context);
            this.FieldVisibilty = new FieldVisibiltiesRepository(this.context);
            this.Module = new ModulesRepository(this.context);
            this.ModuleAction = new ModuleActionsRepository(this.context);
            this.ModuleCategory = new ModuleCategoriesRepository(this.context);
            this.ModuleField = new ModuleFieldsRepository(this.context);
            this.ModuleRole = new ModuleRolesRepository(this.context);
            this.RolePermission = new RolePermissionsRepository(this.context);
            this.UserCollege = new UserCollegesRepository(this.context);
            this.UserDisplay = new UserDisplaysRepository(this.context);
            this.UserPermission = new UserPermissionsRepository(this.context);
            this.VisibiltyRuleField = new VisibiltyRuleFieldsRepository(this.context);
            this.VisibitlyRule = new VisibitlyRulesRepository(this.context);
            this.FileAutoGenerationStatus = new FileAutoGenerationStatusRepository(this.context);
            this.GraduationYear = new GraduationYearsRepository(this.context);
            this.SchoolType = new SchoolTypesRepository(this.context);
            this.WorkStatus = new WorkStatusRepository(this.context);
            this.Reason = new ReasonsRepository(this.context);
            this.SSSExam = new SSSExamsRepository(this.context);
            this.TransferRequest = new TransferRequestsRepository(this.context);
            this.TransferRequestReason = new TransferRequestReasonsRepository(this.context);
            this.CardsFeedbackValidation = new CardsFeedbackValidationsRepository(this.context);
            this.ProgressType = new ProgressTypesRepository(this.context);
            this.SectionEnrollmentAttendanceValidation = new SectionEnrollmentAttendanceValidationsRepository(this.context);
            this.SectionEnrollmentValidation = new SectionEnrollmentValidationsRepository(this.context);
            this.SectionValidation = new SectionValidationsRepository(this.context);
            this.TermCourseValidation = new TermCourseValidationsRepository(this.context);
            this.UploadRejectionReason = new UploadRejectionReasonsRepository(this.context);
            this.UploadRequest = new UploadRequestsRepository(this.context);
            this.UploadRequestDetailsAttendance = new UploadRequestDetailsAttendancesRepository(this.context);
            this.UploadRequestDetailsSection = new UploadRequestDetailsSectionsRepository(this.context);
            this.UploadRequestDetailsSectionEnrollment = new UploadRequestDetailsSectionEnrollmentsRepository(this.context);
            this.UploadRequestStatus = new UploadRequestStatusRepository(this.context);
            this.UploadRequestTrackStatus = new UploadRequestTrackStatusRepository(this.context);
            this.UploadRequestType = new UploadRequestTypesRepository(this.context);
            this.WithdrawReason = new WithdrawReasonsRepository(this.context);
            this.WithdrawRequest = new WithdrawRequestsRepository(this.context);
            this.WithdrawRequestReason = new WithdrawRequestReasonsRepository(this.context);
            this.Request = new RequestsRepository(this.context);
            this.RequestAction = new RequestActionsRepository(this.context);
            this.RequestAttachment = new RequestAttachmentsRepository(this.context);
            this.Workflow = new WorkflowsRepository(this.context);
            this.SectionEnrollmentAttendanceHistory = new SectionEnrollmentAttendanceHistoriesRepository(this.context);
            this.SectionEnrollmentHistory = new SectionEnrollmentHistoriesRepository(this.context);
            this.RequestStatus = new RequestStatusRepository(this.context);
            this.CollegeStaff = new CollegeStaffsRepository(this.context);
            this.Sponser = new SponsersRepository(this.context);
            this.Wave = new WavesRepository(this.context);
            this.StaffType = new StaffTypesRepository(this.context);
            this.Nationality = new NationalitiesRepository(this.context);
            this.StaffLevel = new StaffLevelsRepository(this.context);
            this.StaffQualification = new StaffQualificationsRepository(this.context);
            this.StaffSpecialization = new StaffSpecializationsRepository(this.context);
            this.VisaType = new VisaTypesRepository(this.context);
            this.EnrollmentChangeStatusRequest = new EnrollmentChangeStatusRequestsRepository(this.context);
            this.CollegeAcademicYear = new CollegeAcademicYearsRepository(this.context);
            this.CollegePayment = new CollegePaymentsRepository(this.context);
            this.CourseLevelPaymentSetting = new CourseLevelPaymentSettingsRepository(this.context);
            this.PaymentRequest = new PaymentRequestsRepository(this.context);
            this.PaymentRequestStatus = new PaymentRequestStatusRepository(this.context);
            this.StudentCoursePayment = new StudentCoursePaymentsRepository(this.context);
            this.CardsFeedbackDenialReason = new CardsFeedbackDenialReasonsRepository(this.context);
            this.CardsFeedbackStatus = new CardsFeedbackStatusRepository(this.context);
            this.CardsRequest = new CardsRequestsRepository(this.context);
            this.CardsRequestType = new CardsRequestTypesRepository(this.context);
            this.CardType = new CardTypesRepository(this.context);
            this.Period = new PeriodsRepository(this.context);
            this.StipendFeedbackStatus = new StipendFeedbackStatusRepository(this.context);
            this.StipendMonth = new StipendMonthsRepository(this.context);
            this.StipendPaymentMethod = new StipendPaymentMethodsRepository(this.context);
            this.StipendsRequest = new StipendsRequestsRepository(this.context);
            this.StudentCard = new StudentCardsRepository(this.context);
            this.StudentStipendsRequest = new StudentStipendsRequestsRepository(this.context);
            this.StudentCardHistory = new StudentCardHistoriesRepository(this.context);
            this.StudentCardsRequest = new StudentCardsRequestsRepository(this.context);
            this.PaymentSetting = new PaymentSettingsRepository(this.context);
            this.ReinstateRequest = new ReinstateRequestsRepository(this.context);
            this.Month = new MonthsRepository(this.context);
            this.Year = new YearsRepository(this.context);
            this.JobType = new JobTypesRepository(this.context);
            this.LeaveReason = new LeaveReasonsRepository(this.context);
            this.StudentsDisabilityLevel = new StudentsDisabilityLevelsRepository(this.context);
            this.StudentsDisabilityRequest = new StudentsDisabilityRequestsRepository(this.context);
            this.Bond = new BondsRepository(this.context);
            this.BondType = new BondTypesRepository(this.context);
            this.CollegeAcademicYearTermPeriod = new CollegeAcademicYearTermPeriodsRepository(this.context);
            this.CollegeRepresentiveDetail = new CollegeRepresentiveDetailsRepository(this.context);
            this.ProviderRepresentiveDetail = new ProviderRepresentiveDetailsRepository(this.context);
            this.SponserRepresentiveDetail = new SponserRepresentiveDetailsRepository(this.context);
            this.Alert = new AlertsRepository(this.context);
            this.AlertType = new AlertTypesRepository(this.context);
            this.UserActivity = new UserActivitiesRepository(this.context);
            this.UserActivityType = new UserActivityTypesRepository(this.context);
            this.Bank = new BanksRepository(this.context);
            this.College = new CollegesRepository(this.context);
            this.Contract = new ContractsRepository(this.context);
            this.ContractCollegeAcademicYear = new ContractCollegeAcademicYearsRepository(this.context);
            this.ContractTermPaymentSetting = new ContractTermPaymentSettingsRepository(this.context);
            this.CollegeContactDetail = new CollegeContactDetailsRepository(this.context);
            this.SponserContactDetail = new SponserContactDetailsRepository(this.context);
            this.Provider = new ProvidersRepository(this.context);
            this.ProviderContactDetail = new ProviderContactDetailsRepository(this.context);
            this.ContractAttachment = new ContractAttachmentsRepository(this.context);
            this.BondAttachment = new BondAttachmentsRepository(this.context);
            this.ContractType = new ContractTypesRepository(this.context);
            this.CollegeAcademicYearPeriod = new CollegeAcademicYearPeriodsRepository(this.context);
            this.StudentProfile = new StudentProfilesRepository(this.context);
            this.AcademicYearTermPeriod = new AcademicYearTermPeriodsRepository(this.context);
            this.AspNetRolesParent = new AspNetRolesParentsRepository(this.context);
            this.QuestionAnswer = new QuestionAnswersRepository(this.context);
            this.QuestionOption = new QuestionOptionsRepository(this.context);
            this.QuestionType = new QuestionTypesRepository(this.context);
            this.Survey = new SurveysRepository(this.context);
            this.SurveyAnswer = new SurveyAnswersRepository(this.context);
            this.SurveyModules = new SurveyModulesRepository(this.context);
            this.SurveyQuestion = new SurveyQuestionsRepository(this.context);
            this.ExcludedStudent = new ExcludedStudentsRepository(this.context);
            this.UploadRequestHistory = new UploadRequestHistoriesRepository(this.context);
            this.InvoiceRequest = new InvoiceRequestsRepository(this.context);
            this.CollegePaymentAttachement = new CollegePaymentAttachementsRepository(this.context);
            this.StudentMonthlyPayment = new StudentMonthlyPaymentsRepository(this.context);
            this.Program = new ProgramsRepository(this.context);
            this.ProgramSpecialization = new ProgramSpecializationsRepository(this.context);
            this.SectionType = new SectionTypesRepository(this.context);
            this.StudentProfileAttachement = new StudentProfileAttachementsRepository(this.context);
            this.SubProgram = new SubProgramsRepository(this.context);
            this.EnrollmentRequest = new EnrollmentRequestsRepository(this.context);
            this.TermEnrollment = new TermEnrollmentsRepository(this.context);
            this.ProgramLevel = new ProgramLevelsRepository(this.context);
            this.Batch = new BatchesRepository(this.context);
            this.BatchDetail = new BatchDetailsRepository(this.context);
            this.CollegePlan = new CollegePlansRepository(this.context);
            this.GetAllRequestNotStudent = new GetAllRequestNotStudentsRepository(this.context);
            this.GetAllRequestStudent = new GetAllRequestStudentsRepository(this.context);
            this.SectionAttendanceSetting = new SectionAttendanceSettingsRepository(this.context);
            this.Section = new SectionsRepository(this.context);
            this.GetEnrollmentRequestList = new GetEnrollmentRequestListsRepository(this.context);
            this.CollegeSponser = new CollegeSponsersRepository(this.context);
            this.Enrollment = new EnrollmentsRepository(this.context);
            this.EnrollmentCollegeSponser = new EnrollmentCollegeSponsersRepository(this.context);
            this.SectionAttendanceSettingHistory = new SectionAttendanceSettingHistoriesRepository(this.context);
            this.AssessmentComponent = new AssessmentComponentsRepository(this.context);
            this.BatchServicePeriod = new BatchServicePeriodsRepository(this.context);
            this.CollegeAcademicYearQualificationPeriod = new CollegeAcademicYearQualificationPeriodsRepository(this.context);
            this.EquivalentNOSSCourse = new EquivalentNOSSCoursesRepository(this.context);
            this.GradingRule = new GradingRulesRepository(this.context);
            this.NOSSCourse = new NOSSCoursesRepository(this.context);
            this.Sector = new SectorsRepository(this.context);
            this.Service = new ServicesRepository(this.context);
            this.SpecializationComponentAssessment = new SpecializationComponentAssessmentsRepository(this.context);
            this.CollegeSpecializationRequest = new CollegeSpecializationRequestsRepository(this.context);
            this.AttendenceStatus = new AttendenceStatusRepository(this.context);
            this.DaysWeek = new DaysWeeksRepository(this.context);
            this.SessionAttendanceSettingSchedule = new SessionAttendanceSettingSchedulesRepository(this.context);
            this.SessionScheduleDelegation = new SessionScheduleDelegationsRepository(this.context);
            this.TrainingSectionEnrollmentAttendance = new TrainingSectionEnrollmentAttendancesRepository(this.context);
            this.ApplicantExperince = new ApplicantExperincesRepository(this.context);
            this.QualificationLevel = new QualificationLevelsRepository(this.context);
            this.RPLApplicantAttachment = new RPLApplicantAttachmentsRepository(this.context);
            this.RPLCity = new RPLCitiesRepository(this.context);
            this.RPLCountry = new RPLCountriesRepository(this.context);
            this.RPLQualification = new RPLQualificationsRepository(this.context);
            this.RPLQualificationAttachment = new RPLQualificationAttachmentsRepository(this.context);
            this.RPLRequestPayment = new RPLRequestPaymentsRepository(this.context);
            this.UserEmployer = new UserEmployersRepository(this.context);
            this.SessionValidation = new SessionValidationsRepository(this.context);
            this.UploadRequestDetailsSession = new UploadRequestDetailsSessionsRepository(this.context);
            this.SectionHistory = new SectionHistoriesRepository(this.context);
            this.SessionMonths = new SessionMonthsRepository(this.context);
            this.Candidate = new CandidatesRepository(this.context);
            this.CandidateAttachment = new CandidateAttachmentsRepository(this.context);
            this.CandidateExperinece = new CandidateExperinecesRepository(this.context);
            this.CandidateSkill = new CandidateSkillsRepository(this.context);
            this.CandidateVacancyRequest = new CandidateVacancyRequestsRepository(this.context);
            this.EmployerAttachment = new EmployerAttachmentsRepository(this.context);
            this.EmployerContactDetail = new EmployerContactDetailsRepository(this.context);
            this.EmployerRepresentiveDetail = new EmployerRepresentiveDetailsRepository(this.context);
            this.EmployerRequest = new EmployerRequestsRepository(this.context);
            this.Interview = new InterviewsRepository(this.context);
            this.Skill = new SkillsRepository(this.context);
            this.Vacancy = new VacanciesRepository(this.context);
            this.VacancySkill = new VacancySkillsRepository(this.context);
            this.CollegeSpecialization = new CollegeSpecializationsRepository(this.context);
            this.Course = new CoursesRepository(this.context);
            this.Employer = new EmployersRepository(this.context);
            this.EmployerIndustry = new EmployerIndustriesRepository(this.context);
            this.Industry = new IndustriesRepository(this.context);
            this.StudentOJT = new StudentOJTsRepository(this.context);
            this.EnrollmentOJT = new EnrollmentOJTsRepository(this.context);
            this.ServiceType = new ServiceTypesRepository(this.context);
            this.StudentFailureIntegrationLog = new StudentFailureIntegrationLogsRepository(this.context);
            this.StudentSuccessIntegrationLog = new StudentSuccessIntegrationLogsRepository(this.context);
            this.TeacherLectures = new TeacherLecturesRepository(this.context);
            this.GradingScheme = new GradingSchemesRepository(this.context);
            this.GradingSchemeSetting = new GradingSchemeSettingsRepository(this.context);
            this.GradingType = new GradingTypesRepository(this.context);
            this.IncomingExamResult = new IncomingExamResultsRepository(this.context);
            this.IncomingExamResultDetail = new IncomingExamResultDetailsRepository(this.context);
            this.IncomingExamResultGradingSetting = new IncomingExamResultGradingSettingsRepository(this.context);
            this.AssessmentPeriod = new AssessmentPeriodsRepository(this.context);
            this.AssessmentPeriodComponent = new AssessmentPeriodComponentsRepository(this.context);
            this.AssessmentPeriodStatus = new AssessmentPeriodStatusRepository(this.context);
            this.ExamBookingType = new ExamBookingTypesRepository(this.context);
            this.ExamCalendar = new ExamCalendarsRepository(this.context);
            this.ExamCalendarDay = new ExamCalendarDaysRepository(this.context);
            this.ExamCalendarRequest = new ExamCalendarRequestsRepository(this.context);
            this.ExamCalendarStatus = new ExamCalendarStatusRepository(this.context);
            this.StudentExamCalendar = new StudentExamCalendarsRepository(this.context);
            this.FinalExamResult = new FinalExamResultsRepository(this.context);
            this.StudentGradeBook = new StudentGradeBooksRepository(this.context);
            this.HomePageCategory = new HomePageCategoriesRepository(this.context);
            this.QualificationPeriod = new QualificationPeriodsRepository(this.context);
            this.Specialization = new SpecializationsRepository(this.context);
            this.UserSpecialization = new UserSpecializationsRepository(this.context);
            this.SpecializationUnit = new SpecializationUnitsRepository(this.context);
            this.Unit = new UnitsRepository(this.context);
            this.UnitType = new UnitTypesRepository(this.context);
            this.HomePageModule = new HomePageModulesRepository(this.context);
            this.BatchEditingView = new BatchEditingViewsRepository(this.context);
            this.TransferVistorRequest = new TransferVistorRequestsRepository(this.context);
            this.RPLCertificate = new RPLCertificatesRepository(this.context);
            this.RPLCertificateType = new RPLCertificateTypesRepository(this.context);
            this.CenterAttachments = new CenterAttachmentsRepository(this.context);
            this.CenterTrainingCourses = new CenterTrainingCoursesRepository(this.context);
            this.CenterTrainingTypes = new CenterTrainingTypesRepository(this.context);
            this.CenterRequest = new CenterRequestsRepository(this.context);
            this.CenterDetails = new CenterDetailsRepository(this.context);
            this.CenterDetailTrainingTypes = new CenterDetailTrainingTypesRepository(this.context);
            this.CenterStaffDetails = new CenterStaffDetailsRepository(this.context);
            this.CenterStaffDetailAttachments = new CenterStaffDetailAttachmentsRepository(this.context);
            this.ComplaintPeriods = new ComplaintPeriodsRepository(this.context);
            this.ComplaintRequests = new ComplaintRequestsRepository(this.context);
            this.ComplaintTypes = new ComplaintTypesRepository(this.context);
            this.GetTermEnrollmentListOSHes = new GetTermEnrollmentListOSHesRepository(this.context);
            this.OSHShortCoursesGraduatesViews = new OSHShortCoursesGraduatesViewsRepository(this.context);
            this.GetRPLCertificateViews = new GetRPLCertificateViewsRepository(this.context);
            this.RPLExamRequestAttachments = new RPLExamRequestAttachmentsRepository(this.context);
            this.RPLExamRequestActions = new RPLExamRequestActionsRepository(this.context);
            this.RPLExamBookingCancelationReasons = new RPLExamBookingCancelationReasonsRepository(this.context);
            this.SarasLogs = new SarasLogsRepository(this.context);
            this.SarasLogDetails = new SarasLogDetailsRepository(this.context);
            this.RPLExamRequests = new RPLExamRequestsRepository(this.context);
            this.RPLExamBookingPayments = new RPLExamBookingPaymentsRepository(this.context);
            this.Qualifications = new QualificationsRepository(this.context);
            this.EXAMS_AVAILABLE_SLOTS = new EXAMS_AVAILABLE_SLOTSRepository(this.context);
            this.RPLExamBookings = new RPLExamBookingsRepository(this.context);
            this.RPLApplicant = new RPLApplicantsRepository(this.context);
            this.RPLExamBookingNotification = new RPLExamBookingNotificationsRepository(this.context);
            this.RPLExamBookingNotificationType = new RPLExamBookingNotificationTypesRepository(this.context);
            this.RPLRequest = new RPLRequestsRepository(this.context);
            
            this.NotificationSendStatus = new NotificationSendStatusRepository(this.context);
            this.GetTermEnrollmentList = new GetTermEnrollmentListsRepository(this.context);
            this.RPLExamResult = new RPLExamResultsRepository(this.context);
            this.RPLExamBookingPaymentInvoice = new RPLExamBookingPaymentInvoicesRepository(this.context);
            this.RPLExamBookingInvoiceCreditNote = new RPLExamBookingInvoiceCreditNotesRepository(this.context);
            this.ZATCAInvoiceIntegration = new ZATCAInvoiceIntegrationsRepository(this.context);
            this.ZATCAInvoiceIntegrationLog = new ZATCAInvoiceIntegrationLogsRepository(this.context);
            this.RPLExamBookingAttendanceStatus = new RPLExamBookingAttendanceStatusRepository(this.context);
            this.ExamCalendarRequestComments = new ExamCalendarRequestCommentsRepository(this.context);
            this.ExamCalendarRequestCancelation = new ExamCalendarRequestCancelationsRepository(this.context);
            this.OSHRPLGraduatesView = new OSHRPLGraduatesViewsRepository(this.context);
        }
    
    	private readonly  DbContext context;
    
    	/// <summary>
        /// The Logger
        /// </summary>
        private static readonly Logger Logger = new Logger(MethodBase.GetCurrentMethod().DeclaringType);
        
        public DismissRequestsRepository DismissRequest { get; set; }
        public AcademicYearsRepository AcademicYear { get; set; }
        public AcademicYearTermsRepository AcademicYearTerm { get; set; }
        public AreasRepository Area { get; set; }
        public CitiesRepository City { get; set; }
        public CollegeTypesRepository CollegeType { get; set; }
        public CountriesRepository Country { get; set; }
        public CourseTypesRepository CourseType { get; set; }
        public LevelsRepository Level { get; set; }
        public TermCoursesRepository TermCourse { get; set; }
        public TermTypesRepository TermType { get; set; }
        public AttachmentContentsRepository AttachmentContents { get; set; }
        public AttachmentsRepository Attachments { get; set; }
        public AttachmentTypesRepository AttachmentTypes { get; set; }
        public EnrollmentStatisticsRepository EnrollmentStatistic { get; set; }
        public EnrollmentStatisticTypesRepository EnrollmentStatisticType { get; set; }
        public SpecializationStatisticsRepository SpecializationStatistic { get; set; }
        public TermEnrollmentStatisticSettingsRepository TermEnrollmentStatisticSetting { get; set; }
        public AspNetRolesRepository AspNetRoles { get; set; }
        public AspNetUserClaimsRepository AspNetUserClaims { get; set; }
        public AspNetUserLoginsRepository AspNetUserLogins { get; set; }
        public AspNetUsersRepository AspNetUsers { get; set; }
        public DecisionsRepository Decision { get; set; }
        public StagesRepository Stage { get; set; }
        public StageDecisionsRepository StageDecision { get; set; }
        public StatusRepository Status { get; set; }
        public SectionEnrollmentsRepository SectionEnrollment { get; set; }
        public SectionEnrollmentAttendancesRepository SectionEnrollmentAttendance { get; set; }
        public DeferralReasonsRepository DeferralReason { get; set; }
        public DeferralRequestsRepository DeferralRequest { get; set; }
        public DeferralRequestAcademicYearTermsRepository DeferralRequestAcademicYearTerm { get; set; }
        public DeferralRequestReasonsRepository DeferralRequestReason { get; set; }
        public DismissReasonsRepository DismissReason { get; set; }
        public DismissRequestReasonsRepository DismissRequestReason { get; set; }
        public EnrollmentRequestDetailsRepository EnrollmentRequestDetail { get; set; }
        public AssessmentsRepository Assessment { get; set; }
        public EnglishExamResultsRepository EnglishExamResult { get; set; }
        public EnglishExamScoresRepository EnglishExamScore { get; set; }
        public ExamStatusRepository ExamStatus { get; set; }
        public ExamTypesRepository ExamType { get; set; }
        public VocationalExamResultsRepository VocationalExamResult { get; set; }
        public VocationalExamResultDetailsRepository VocationalExamResultDetail { get; set; }
        public VocationalExamScoresRepository VocationalExamScore { get; set; }
        public VocationalExamTypesRepository VocationalExamType { get; set; }
        public ActionsRepository Action { get; set; }
        public FieldVisibiltiesRepository FieldVisibilty { get; set; }
        public ModulesRepository Module { get; set; }
        public ModuleActionsRepository ModuleAction { get; set; }
        public ModuleCategoriesRepository ModuleCategory { get; set; }
        public ModuleFieldsRepository ModuleField { get; set; }
        public ModuleRolesRepository ModuleRole { get; set; }
        public RolePermissionsRepository RolePermission { get; set; }
        public UserCollegesRepository UserCollege { get; set; }
        public UserDisplaysRepository UserDisplay { get; set; }
        public UserPermissionsRepository UserPermission { get; set; }
        public VisibiltyRuleFieldsRepository VisibiltyRuleField { get; set; }
        public VisibitlyRulesRepository VisibitlyRule { get; set; }
        public FileAutoGenerationStatusRepository FileAutoGenerationStatus { get; set; }
        public GraduationYearsRepository GraduationYear { get; set; }
        public SchoolTypesRepository SchoolType { get; set; }
        public WorkStatusRepository WorkStatus { get; set; }
        public ReasonsRepository Reason { get; set; }
        public SSSExamsRepository SSSExam { get; set; }
        public TransferRequestsRepository TransferRequest { get; set; }
        public TransferRequestReasonsRepository TransferRequestReason { get; set; }
        public CardsFeedbackValidationsRepository CardsFeedbackValidation { get; set; }
        public ProgressTypesRepository ProgressType { get; set; }
        public SectionEnrollmentAttendanceValidationsRepository SectionEnrollmentAttendanceValidation { get; set; }
        public SectionEnrollmentValidationsRepository SectionEnrollmentValidation { get; set; }
        public SectionValidationsRepository SectionValidation { get; set; }
        public TermCourseValidationsRepository TermCourseValidation { get; set; }
        public UploadRejectionReasonsRepository UploadRejectionReason { get; set; }
        public UploadRequestsRepository UploadRequest { get; set; }
        public UploadRequestDetailsAttendancesRepository UploadRequestDetailsAttendance { get; set; }
        public UploadRequestDetailsSectionsRepository UploadRequestDetailsSection { get; set; }
        public UploadRequestDetailsSectionEnrollmentsRepository UploadRequestDetailsSectionEnrollment { get; set; }
        public UploadRequestStatusRepository UploadRequestStatus { get; set; }
        public UploadRequestTrackStatusRepository UploadRequestTrackStatus { get; set; }
        public UploadRequestTypesRepository UploadRequestType { get; set; }
        public WithdrawReasonsRepository WithdrawReason { get; set; }
        public WithdrawRequestsRepository WithdrawRequest { get; set; }
        public WithdrawRequestReasonsRepository WithdrawRequestReason { get; set; }
        public RequestsRepository Request { get; set; }
        public RequestActionsRepository RequestAction { get; set; }
        public RequestAttachmentsRepository RequestAttachment { get; set; }
        public WorkflowsRepository Workflow { get; set; }
        public SectionEnrollmentAttendanceHistoriesRepository SectionEnrollmentAttendanceHistory { get; set; }
        public SectionEnrollmentHistoriesRepository SectionEnrollmentHistory { get; set; }
        public RequestStatusRepository RequestStatus { get; set; }
        public CollegeStaffsRepository CollegeStaff { get; set; }
        public SponsersRepository Sponser { get; set; }
        public WavesRepository Wave { get; set; }
        public StaffTypesRepository StaffType { get; set; }
        public NationalitiesRepository Nationality { get; set; }
        public StaffLevelsRepository StaffLevel { get; set; }
        public StaffQualificationsRepository StaffQualification { get; set; }
        public StaffSpecializationsRepository StaffSpecialization { get; set; }
        public VisaTypesRepository VisaType { get; set; }
        public EnrollmentChangeStatusRequestsRepository EnrollmentChangeStatusRequest { get; set; }
        public CollegeAcademicYearsRepository CollegeAcademicYear { get; set; }
        public CollegePaymentsRepository CollegePayment { get; set; }
        public CourseLevelPaymentSettingsRepository CourseLevelPaymentSetting { get; set; }
        public PaymentRequestsRepository PaymentRequest { get; set; }
        public PaymentRequestStatusRepository PaymentRequestStatus { get; set; }
        public StudentCoursePaymentsRepository StudentCoursePayment { get; set; }
        public CardsFeedbackDenialReasonsRepository CardsFeedbackDenialReason { get; set; }
        public CardsFeedbackStatusRepository CardsFeedbackStatus { get; set; }
        public CardsRequestsRepository CardsRequest { get; set; }
        public CardsRequestTypesRepository CardsRequestType { get; set; }
        public CardTypesRepository CardType { get; set; }
        public PeriodsRepository Period { get; set; }
        public StipendFeedbackStatusRepository StipendFeedbackStatus { get; set; }
        public StipendMonthsRepository StipendMonth { get; set; }
        public StipendPaymentMethodsRepository StipendPaymentMethod { get; set; }
        public StipendsRequestsRepository StipendsRequest { get; set; }
        public StudentCardsRepository StudentCard { get; set; }
        public StudentStipendsRequestsRepository StudentStipendsRequest { get; set; }
        public StudentCardHistoriesRepository StudentCardHistory { get; set; }
        public StudentCardsRequestsRepository StudentCardsRequest { get; set; }
        public PaymentSettingsRepository PaymentSetting { get; set; }
        public ReinstateRequestsRepository ReinstateRequest { get; set; }
        public MonthsRepository Month { get; set; }
        public YearsRepository Year { get; set; }
        public JobTypesRepository JobType { get; set; }
        public LeaveReasonsRepository LeaveReason { get; set; }
        public StudentsDisabilityLevelsRepository StudentsDisabilityLevel { get; set; }
        public StudentsDisabilityRequestsRepository StudentsDisabilityRequest { get; set; }
        public BondsRepository Bond { get; set; }
        public BondTypesRepository BondType { get; set; }
        public CollegeAcademicYearTermPeriodsRepository CollegeAcademicYearTermPeriod { get; set; }
        public CollegeRepresentiveDetailsRepository CollegeRepresentiveDetail { get; set; }
        public ProviderRepresentiveDetailsRepository ProviderRepresentiveDetail { get; set; }
        public SponserRepresentiveDetailsRepository SponserRepresentiveDetail { get; set; }
        public AlertsRepository Alert { get; set; }
        public AlertTypesRepository AlertType { get; set; }
        public UserActivitiesRepository UserActivity { get; set; }
        public UserActivityTypesRepository UserActivityType { get; set; }
        public BanksRepository Bank { get; set; }
        public CollegesRepository College { get; set; }
        public ContractsRepository Contract { get; set; }
        public ContractCollegeAcademicYearsRepository ContractCollegeAcademicYear { get; set; }
        public ContractTermPaymentSettingsRepository ContractTermPaymentSetting { get; set; }
        public CollegeContactDetailsRepository CollegeContactDetail { get; set; }
        public SponserContactDetailsRepository SponserContactDetail { get; set; }
        public ProvidersRepository Provider { get; set; }
        public ProviderContactDetailsRepository ProviderContactDetail { get; set; }
        public ContractAttachmentsRepository ContractAttachment { get; set; }
        public BondAttachmentsRepository BondAttachment { get; set; }
        public ContractTypesRepository ContractType { get; set; }
        public CollegeAcademicYearPeriodsRepository CollegeAcademicYearPeriod { get; set; }
        public StudentProfilesRepository StudentProfile { get; set; }
        public AcademicYearTermPeriodsRepository AcademicYearTermPeriod { get; set; }
        public AspNetRolesParentsRepository AspNetRolesParent { get; set; }
        public QuestionAnswersRepository QuestionAnswer { get; set; }
        public QuestionOptionsRepository QuestionOption { get; set; }
        public QuestionTypesRepository QuestionType { get; set; }
        public SurveysRepository Survey { get; set; }
        public SurveyAnswersRepository SurveyAnswer { get; set; }
        public SurveyModulesRepository SurveyModules { get; set; }
        public SurveyQuestionsRepository SurveyQuestion { get; set; }
        public ExcludedStudentsRepository ExcludedStudent { get; set; }
        public UploadRequestHistoriesRepository UploadRequestHistory { get; set; }
        public InvoiceRequestsRepository InvoiceRequest { get; set; }
        public CollegePaymentAttachementsRepository CollegePaymentAttachement { get; set; }
        public StudentMonthlyPaymentsRepository StudentMonthlyPayment { get; set; }
        public ProgramsRepository Program { get; set; }
        public ProgramSpecializationsRepository ProgramSpecialization { get; set; }
        public SectionTypesRepository SectionType { get; set; }
        public StudentProfileAttachementsRepository StudentProfileAttachement { get; set; }
        public SubProgramsRepository SubProgram { get; set; }
        public EnrollmentRequestsRepository EnrollmentRequest { get; set; }
        public TermEnrollmentsRepository TermEnrollment { get; set; }
        public ProgramLevelsRepository ProgramLevel { get; set; }
        public BatchesRepository Batch { get; set; }
        public BatchDetailsRepository BatchDetail { get; set; }
        public CollegePlansRepository CollegePlan { get; set; }
        public GetAllRequestNotStudentsRepository GetAllRequestNotStudent { get; set; }
        public GetAllRequestStudentsRepository GetAllRequestStudent { get; set; }
        public SectionAttendanceSettingsRepository SectionAttendanceSetting { get; set; }
        public SectionsRepository Section { get; set; }
        public GetEnrollmentRequestListsRepository GetEnrollmentRequestList { get; set; }
        public CollegeSponsersRepository CollegeSponser { get; set; }
        public EnrollmentsRepository Enrollment { get; set; }
        public EnrollmentCollegeSponsersRepository EnrollmentCollegeSponser { get; set; }
        public SectionAttendanceSettingHistoriesRepository SectionAttendanceSettingHistory { get; set; }
        public AssessmentComponentsRepository AssessmentComponent { get; set; }
        public BatchServicePeriodsRepository BatchServicePeriod { get; set; }
        public CollegeAcademicYearQualificationPeriodsRepository CollegeAcademicYearQualificationPeriod { get; set; }
        public EquivalentNOSSCoursesRepository EquivalentNOSSCourse { get; set; }
        public GradingRulesRepository GradingRule { get; set; }
        public NOSSCoursesRepository NOSSCourse { get; set; }
        public SectorsRepository Sector { get; set; }
        public ServicesRepository Service { get; set; }
        public SpecializationComponentAssessmentsRepository SpecializationComponentAssessment { get; set; }
        public CollegeSpecializationRequestsRepository CollegeSpecializationRequest { get; set; }
        public AttendenceStatusRepository AttendenceStatus { get; set; }
        public DaysWeeksRepository DaysWeek { get; set; }
        public SessionAttendanceSettingSchedulesRepository SessionAttendanceSettingSchedule { get; set; }
        public SessionScheduleDelegationsRepository SessionScheduleDelegation { get; set; }
        public TrainingSectionEnrollmentAttendancesRepository TrainingSectionEnrollmentAttendance { get; set; }
        public ApplicantExperincesRepository ApplicantExperince { get; set; }
        public QualificationLevelsRepository QualificationLevel { get; set; }
        public RPLApplicantAttachmentsRepository RPLApplicantAttachment { get; set; }
        public RPLCitiesRepository RPLCity { get; set; }
        public RPLCountriesRepository RPLCountry { get; set; }
        public RPLQualificationsRepository RPLQualification { get; set; }
        public RPLQualificationAttachmentsRepository RPLQualificationAttachment { get; set; }
        public RPLRequestPaymentsRepository RPLRequestPayment { get; set; }
        public UserEmployersRepository UserEmployer { get; set; }
        public SessionValidationsRepository SessionValidation { get; set; }
        public UploadRequestDetailsSessionsRepository UploadRequestDetailsSession { get; set; }
        public SectionHistoriesRepository SectionHistory { get; set; }
        public SessionMonthsRepository SessionMonths { get; set; }
        public CandidatesRepository Candidate { get; set; }
        public CandidateAttachmentsRepository CandidateAttachment { get; set; }
        public CandidateExperinecesRepository CandidateExperinece { get; set; }
        public CandidateSkillsRepository CandidateSkill { get; set; }
        public CandidateVacancyRequestsRepository CandidateVacancyRequest { get; set; }
        public EmployerAttachmentsRepository EmployerAttachment { get; set; }
        public EmployerContactDetailsRepository EmployerContactDetail { get; set; }
        public EmployerRepresentiveDetailsRepository EmployerRepresentiveDetail { get; set; }
        public EmployerRequestsRepository EmployerRequest { get; set; }
        public InterviewsRepository Interview { get; set; }
        public SkillsRepository Skill { get; set; }
        public VacanciesRepository Vacancy { get; set; }
        public VacancySkillsRepository VacancySkill { get; set; }
        public CollegeSpecializationsRepository CollegeSpecialization { get; set; }
        public CoursesRepository Course { get; set; }
        public EmployersRepository Employer { get; set; }
        public EmployerIndustriesRepository EmployerIndustry { get; set; }
        public IndustriesRepository Industry { get; set; }
        public StudentOJTsRepository StudentOJT { get; set; }
        public EnrollmentOJTsRepository EnrollmentOJT { get; set; }
        public ServiceTypesRepository ServiceType { get; set; }
        public StudentFailureIntegrationLogsRepository StudentFailureIntegrationLog { get; set; }
        public StudentSuccessIntegrationLogsRepository StudentSuccessIntegrationLog { get; set; }
        public TeacherLecturesRepository TeacherLectures { get; set; }
        public GradingSchemesRepository GradingScheme { get; set; }
        public GradingSchemeSettingsRepository GradingSchemeSetting { get; set; }
        public GradingTypesRepository GradingType { get; set; }
        public IncomingExamResultsRepository IncomingExamResult { get; set; }
        public IncomingExamResultDetailsRepository IncomingExamResultDetail { get; set; }
        public IncomingExamResultGradingSettingsRepository IncomingExamResultGradingSetting { get; set; }
        public AssessmentPeriodsRepository AssessmentPeriod { get; set; }
        public AssessmentPeriodComponentsRepository AssessmentPeriodComponent { get; set; }
        public AssessmentPeriodStatusRepository AssessmentPeriodStatus { get; set; }
        public ExamBookingTypesRepository ExamBookingType { get; set; }
        public ExamCalendarsRepository ExamCalendar { get; set; }
        public ExamCalendarDaysRepository ExamCalendarDay { get; set; }
        public ExamCalendarRequestsRepository ExamCalendarRequest { get; set; }
        public ExamCalendarStatusRepository ExamCalendarStatus { get; set; }
        public StudentExamCalendarsRepository StudentExamCalendar { get; set; }
        public FinalExamResultsRepository FinalExamResult { get; set; }
        public StudentGradeBooksRepository StudentGradeBook { get; set; }
        public HomePageCategoriesRepository HomePageCategory { get; set; }
        public QualificationPeriodsRepository QualificationPeriod { get; set; }
        public SpecializationsRepository Specialization { get; set; }
        public UserSpecializationsRepository UserSpecialization { get; set; }
        public SpecializationUnitsRepository SpecializationUnit { get; set; }
        public UnitsRepository Unit { get; set; }
        public UnitTypesRepository UnitType { get; set; }
        public HomePageModulesRepository HomePageModule { get; set; }
        public BatchEditingViewsRepository BatchEditingView { get; set; }
        public TransferVistorRequestsRepository TransferVistorRequest { get; set; }
        public RPLCertificatesRepository RPLCertificate { get; set; }
        public RPLCertificateTypesRepository RPLCertificateType { get; set; }
        public CenterAttachmentsRepository CenterAttachments { get; set; }
        public CenterTrainingCoursesRepository CenterTrainingCourses { get; set; }
        public CenterTrainingTypesRepository CenterTrainingTypes { get; set; }
        public CenterRequestsRepository CenterRequest { get; set; }
        public CenterDetailsRepository CenterDetails { get; set; }
        public CenterDetailTrainingTypesRepository CenterDetailTrainingTypes { get; set; }
        public CenterStaffDetailsRepository CenterStaffDetails { get; set; }
        public CenterStaffDetailAttachmentsRepository CenterStaffDetailAttachments { get; set; }
        public ComplaintPeriodsRepository ComplaintPeriods { get; set; }
        public ComplaintRequestsRepository ComplaintRequests { get; set; }
        public ComplaintTypesRepository ComplaintTypes { get; set; }
        public GetTermEnrollmentListOSHesRepository GetTermEnrollmentListOSHes { get; set; }
        public OSHShortCoursesGraduatesViewsRepository OSHShortCoursesGraduatesViews { get; set; }
        public GetRPLCertificateViewsRepository GetRPLCertificateViews { get; set; }
        public RPLExamRequestAttachmentsRepository RPLExamRequestAttachments { get; set; }
        public RPLExamRequestActionsRepository RPLExamRequestActions { get; set; }
        public RPLExamBookingCancelationReasonsRepository RPLExamBookingCancelationReasons { get; set; }
        public SarasLogsRepository SarasLogs { get; set; }
        public SarasLogDetailsRepository SarasLogDetails { get; set; }
        public RPLExamRequestsRepository RPLExamRequests { get; set; }
        public RPLExamBookingPaymentsRepository RPLExamBookingPayments { get; set; }
        public QualificationsRepository Qualifications { get; set; }
        public EXAMS_AVAILABLE_SLOTSRepository EXAMS_AVAILABLE_SLOTS { get; set; }
        public RPLExamBookingsRepository RPLExamBookings { get; set; }
        public RPLApplicantsRepository RPLApplicant { get; set; }
        public RPLExamBookingNotificationsRepository RPLExamBookingNotification { get; set; }
        public RPLExamBookingNotificationTypesRepository RPLExamBookingNotificationType { get; set; }
        public RPLRequestsRepository RPLRequest { get; set; }
        public NotificationSendStatusRepository NotificationSendStatus { get; set; }
        public GetTermEnrollmentListsRepository GetTermEnrollmentList { get; set; }
        public RPLExamResultsRepository RPLExamResult { get; set; }
        public RPLExamBookingPaymentInvoicesRepository RPLExamBookingPaymentInvoice { get; set; }
        public RPLExamBookingInvoiceCreditNotesRepository RPLExamBookingInvoiceCreditNote { get; set; }
        public ZATCAInvoiceIntegrationsRepository ZATCAInvoiceIntegration { get; set; }
        public ZATCAInvoiceIntegrationLogsRepository ZATCAInvoiceIntegrationLog { get; set; }
        public RPLExamBookingAttendanceStatusRepository RPLExamBookingAttendanceStatus { get; set; }
        public ExamCalendarRequestCommentsRepository ExamCalendarRequestComments { get; set; }
        public ExamCalendarRequestCancelationsRepository ExamCalendarRequestCancelation { get; set; }
        public OSHRPLGraduatesViewsRepository OSHRPLGraduatesView { get; set; }
    
    	/// <summary>
        /// Calling SaveChanges does create a DB transaction so
        /// every query executed against the DB will be rollbacked is something goes wrong.
        /// </summary>
        /// <returns></returns>
        public int Save(string userId = null,bool validateOnSaveEnabled = true)
        {
            //In all versions of Entity Framework, whenever you execute SaveChanges() to insert, update or delete on the 
            //database the framework will wrap that operation in a transaction. This transaction lasts only long enough to             
            //execute the operation and then completes. When you execute another such operation a new transaction is started.
              
    		try
                {
    				this.context.Configuration.ValidateOnSaveEnabled = validateOnSaveEnabled;
                    this.UpdatePropertiesBeforeSave(userId);
                    var result= this.context.SaveChanges();
                   // transaction.Commit();
                    return result;
                }
                catch (System.Data.Entity.Validation.DbEntityValidationException entityValidationException)
                {
                    foreach (var entityValidationError in entityValidationException.EntityValidationErrors)
                        {    
                            var message = string.Empty;
                            foreach (var validationError in entityValidationError.ValidationErrors)
                            {
                                message += $" \n Entity: {entityValidationError.Entry.Entity} \n Property: {validationError.PropertyName} \n Error: {validationError.ErrorMessage} \n ";
                            }
                            if (entityValidationError.ValidationErrors.Count > 0)
                            {
                                Exception exception = new Exception(message);
                                Logger.Error(exception);
                                throw exception;
                            }
                        }
                }
    
                return 0;            
        }
    
    	/// <summary>
        /// Updates the properties before save.
        /// </summary>
        /// <param name="userId">The user identifier.</param>
        private void UpdatePropertiesBeforeSave(string userId = null)
        {
    		 if (string.IsNullOrEmpty(userId) 
                    && HttpContext.Current != null 
                    && HttpContext.Current.User != null
        	        && HttpContext.Current.User.Identity.IsAuthenticated)
        	    {
        	        userId = HttpContext.Current.User.Identity.Name;
        	    }
    
            const string CreatedOnProperty = "CreatedOn";
            const string ModifiedOnPropery = "UpdatedOn";
            //const string IsActiveProperty = "IsActive";
            const string IdProperty = "Id";
    
            IEnumerable<DbEntityEntry> entitiesWithCreatedOn =
                this.context.ChangeTracker.Entries()
                    .Where(
                        e => e.State == EntityState.Added && e.Entity.GetType().GetProperty(CreatedOnProperty) != null);
            foreach (DbEntityEntry entry in entitiesWithCreatedOn)
            {
                entry.Property(CreatedOnProperty).CurrentValue = DateTime.Now;
            }
    
            //IEnumerable<DbEntityEntry> entitiesWithStateCode =
            //    this.context.ChangeTracker.Entries()
            //        .Where(
            //            e => e.State == EntityState.Added && e.Entity.GetType().GetProperty(IsActiveProperty) != null);
            //foreach (DbEntityEntry entry in entitiesWithStateCode)
            //{
                //entry.Property(IsActiveProperty).CurrentValue = true;
            //}
    
            IEnumerable<DbEntityEntry> entitiesWithId =
                this.context.ChangeTracker.Entries()
                    .Where(e => e.State == EntityState.Added && e.Entity.GetType().GetProperty(IdProperty) != null);
            foreach (DbEntityEntry entry in entitiesWithId)
            {
               Guid id = Guid.Empty;
                    if (Guid.TryParse(entry.Property(IdProperty).CurrentValue.ToString(), out id) && id == Guid.Empty)
                    {
                            entry.Property(IdProperty).CurrentValue = Guid.NewGuid();
                    }
            }
    
            IEnumerable<DbEntityEntry> entitiesWithModifiedOn =
                this.context.ChangeTracker.Entries()
                    .Where(
                        e => (e.State == EntityState.Modified || e.State == EntityState.Added) && e.Entity.GetType().GetProperty(ModifiedOnPropery) != null);
            foreach (DbEntityEntry entry in entitiesWithModifiedOn)
            {
                entry.Property(ModifiedOnPropery).CurrentValue = DateTime.Now;
            }
    
            if (!string.IsNullOrEmpty(userId))
            {
                const string CreatedByPropery = "CreatedBy";
                const string ModifiedByPropery = "UpdatedBy";
                IEnumerable<DbEntityEntry> entitiesWithCreatedBy =
                     this.context.ChangeTracker.Entries()
                        .Where(
                            e =>
                            e.State == EntityState.Added && e.Entity.GetType().GetProperty(CreatedByPropery) != null);
                foreach (DbEntityEntry entry in entitiesWithCreatedBy)
                {
                    entry.Property(CreatedByPropery).CurrentValue = userId;
                }
    
                IEnumerable<DbEntityEntry> entitiesWithModifiedBy =
                    this.context.ChangeTracker.Entries()
                        .Where(
                            e =>
                            (e.State == EntityState.Modified || e.State == EntityState.Added) && e.Entity.GetType().GetProperty(ModifiedByPropery) != null);
                foreach (DbEntityEntry entry in entitiesWithModifiedBy)
                {
                    entry.Property(ModifiedByPropery).CurrentValue = userId;
                }
            }
        }
    
    	~COEUoW()
        {
            this.Dispose(false);
        }
    
        public void Dispose()
        {
            this.Dispose(true);
            GC.SuppressFinalize(this);
        }
    
        private void Dispose(bool disposing)
        {
            if (disposing)
            {
                this.context?.Dispose();
                var dbContext = this.context;
                dbContext?.Dispose();
            }
        }
    
    
    }
}
