@using COE.Survey.Web.ViewModels;
@using COE.Common.Localization
@using COE.Common.Model.ViewModels
@using COE.Survey.Web;

@model SurveysViewModel

@{
    ViewBag.Title = "Surveys";
    List<LookupViewModel> modules = ViewBag.Modules;
    List<LookupViewModel> AllStatus = ViewBag.AllStatus;

    bool isAdmin = COE.Survey.Web.Helpers.LookupsHelper.IsCurrentUserAdmin();
    bool canCreate = ((SurveysController)this.ViewContext.Controller).IsActionAvailable("CreateSurvey");
    bool canPublish = ((SurveysController)this.ViewContext.Controller).IsActionAvailable("PublishSurvey");
    bool canApprove = ((SurveysController)this.ViewContext.Controller).IsActionAvailable("ApproveSurvey");

    string message = Model.ErrorMsg;
}

@*<link href="~/Content/theme/assets/global/plugins/bootstrap-toggle-master/css/bootstrap-toggle.min.css" rel="stylesheet" />
    <script src="~/Content/theme/assets/global/plugins/bootstrap-toggle-master/js/bootstrap-toggle.min.js"></script>*@








<section class="d-flex landing__content flex-column container">

    @if (!string.IsNullOrEmpty(message))
    {
        <div id="layoutAlertMessage" class="alert alert-danger">
            @*<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>*@
            @Html.Raw(message)
        </div>
    }


    <!-- Search section -->
    @using (Html.BeginForm("Index", "Surveys", FormMethod.Post, new { @class = "landing__container landing__search", role = "form" }))
    {
        @Html.AntiForgeryToken();
        <h1 class="mb-3">@SurveysResources.AdvancedSearch</h1>




        <div class="row justify-content-between">
            <!-- Survey module select -->
            <div class="col-md-6 d-flex flex-column">
                <label>@SurveysResources.SurveyModule</label>

                @Html.DropDownListFor(model => model.ModuleId, new SelectList(modules, "Value", "Text"), @SharedResources.DefaultSelect, new { @class = "form-select", aria_label = "Default select example" })


            </div>

            <!-- Survey status select -->
            <div class="col-md-6 d-flex flex-column">
                <label>@SurveysResources.SurveyStatus</label>
                @Html.DropDownListFor(model => model.StatusId, new SelectList(AllStatus, "Value", "Text"), @SharedResources.DefaultSelect, new { @class = "form-select", aria_label = "Default select example" })
            </div>
        </div>

        <!-- Search btn -->
        <button type="submit" class="mt-3 landing__btn">@SharedResources.Search</button>
    }

    <!-- Survey list -->
    <div class="landing__container">
        <!-- Survey list header -->
        <div class="d-flex justify-content-between mb-4 align-items-center">
            <h2 class="mb-0">@SurveysResources.Surveys</h2>

            @if (canCreate)
            {
                <a class="landing__btn" href="@Url.Action("Add", "Surveys")" style="text-decoration: none;">
                    @SurveysResources.CreateNewSurvey
                </a>

            }

        </div>

        <div class="d-flex landing__surveys-container flex-wrap">


            @if (Model?.SurviesList != null && Model.SurviesList.Any())
            {
                foreach (var item in Model.SurviesList)
                {

                    <div class="landing__survey-card d-flex flex-column">
                        <!-- Survey img -->
                        <figure class="d-flex justify-content-center align-items-center">

                            @if (string.IsNullOrEmpty(@item.ImageUrl))
                            {
                                <img src="~/Content/Images/test.jpeg" class="img-fluid"
                                     alt="Survey Image">
                            }
                            else
                            {
                                <img src="@item.ImageUrl" class="img-fluid"
                                     alt="Survey Image">
                            }

                        </figure>

                        <div class="d-flex justify-content-between mb-3 position-relative">
                            <!-- Card title -->
                            <h3>@item.SurveyTitle</h3>




                            <!-- More btn -->
                            <button type="button" class="langing__more-btn" data-bs-toggle="dropdown"
                                    aria-expanded="false">
                                <img src="~/Content/images/more.svg" alt="more-icon" />
                            </button>

                            <!-- Actions menu -->
                            <ul class="landing__survey-menu dropdown-menu">

                                @if (item.StatusId == (int)SurveyStatusEnum.Draft)
                                {
                                    if (canCreate)
                                    {
                                        if (item.CanEdit)
                                        {
                                            <li><a href="@Url.Action("edit", "Surveys", new { Id = @item.ID })" class="d-flex" title="Edit"><img src="~/Content/images/copy.svg" alt="menu-icon" /> <span>@SurveysResources.Edit</span></a></li>
                                        }


                                        <li><a href="@Url.Action("SurveyUsers", "Surveys", new { Id = @item.ID })" class="d-flex" title="Edit"><img src="~/Content/images/copy.svg" alt="menu-icon" /> <span>Add Viewer</span></a></li>


                                    }

                                    if (canPublish)
                                    {
                                        <li><a href="@Url.Action("publish", "Surveys", new { Id = @item.ID })" class="d-flex" title="Publish"><img src="~/Content/images/copy.svg" alt="menu-icon" /> <span>@SurveysResources.Publish</span></a></li>

                                    }
                                }
                                else if (item.StatusId == (int)SurveyStatusEnum.Published)
                                {
                                    if (canApprove)
                                    {
                                        <li><a href="@Url.Action("Approve", "Surveys", new { Id = @item.ID })" class="d-flex" title="Approve"><img src="~/Content/images/copy.svg" alt="menu-icon" /> <span>@SurveysResources.Approve</span></a></li>

                                    }
                                }
                                else if (item.StatusId == (int)SurveyStatusEnum.Approved)
                                {
                                    <li>
                                        <a href="@Url.Action("answer", "Surveys", new { Id = @item.ID })" class="d-flex">
                                            <img src="~/Content/images/folder-2.svg" alt="menu-icon" />
                                            <span>@SurveysResources.Answer</span>
                                        </a>
                                    </li>

                                    <li>
                                        <button class="d-flex" onclick="CopyTextToClipboard(this,'@item.SurveyLink')">
                                            <img src="~/Content/images/copy.svg" alt="menu-icon" />
                                            <span>@SurveysResources.CopyLink</span>
                                        </button>
                                    </li>

                                    <li>
                                        <a href="@Url.Action("Result", "Surveys", new { Id = @item.ID })" class="d-flex">
                                            <img src="~/Content/images/book-saved.svg" alt="menu-icon" />
                                            <span>@SurveysResources.Results</span>
                                        </a>
                                    </li>
                                    <li>
                                        <a href="@Url.Action("Dashboard", "Surveys", new { Id = @item.ID })" class="d-flex">
                                            <img src="~/Content/images/element-3.svg" alt="menu-icon" />
                                            <span>@SurveysResources.Dashboard</span>
                                        </a>
                                    </li>

                                    if (isAdmin)
                                    {
                                        <li>
                                            <button class="d-flex" onclick="RevertToDraft($(this));" id="@item.ID">
                                                <img src="~/Content/images/copy.svg" alt="menu-icon" />
                                                <span>@SurveysResources.RevertToDraft</span>
                                            </button>
                                        </li>
                                    }
                                }

                                @if (canCreate)
                                {
                                    <li>
                                        <a href="@Url.Action("Duplicate", "Surveys", new { Id = @item.ID })" class="d-flex">
                                            <img src="~/Content/images/hierarchy-2.svg" alt="menu-icon" />
                                            <span>@SurveysResources.Clone</span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>

                        <!-- Divider -->
                        <div class="landing__seperator"></div>

                        <!-- Card data -->
                        <div class="mt-3 landing__data d-flex flex-column">
                            <!-- Activation status -->
                            <div class="d-flex landing__data-container align-items-center">
                                <label>@SurveysResources.ActivationStatus:</label>

                                <div class="form-check form-switch">
                                    <input class="surveyStatus form-check-input" onchange="UpdateSurveyStatus($(this));" checked="@item.IsActive" id="@item.ID"
                                           type="checkbox"
                                           role="switch" />
                                </div>
                            </div>

                            <!-- Status -->
                            <div class="d-flex landing__data-container">
                                <label>@SurveysResources.Status:</label>

                                <p class="landing__status @GetStatusClass((int)(SurveyStatusEnum)@item.StatusId)">@(((SurveyStatusEnum)@item.StatusId).ToString())</p>

                            </div>

                            <!-- Created by -->
                            <div class="d-flex landing__data-container">
                                <label>@SurveysResources.Createdby:</label>

                                <p>@item.CreatedBy</p>
                            </div>

                            <!-- Last Update -->
                            <div class="d-flex landing__data-container">
                                <label>@SurveysResources.LastUpdate:</label>

                                <p>@item.UpdatedOn</p>
                            </div>
                        </div>
                    </div>
                }
            }

        </div>
    </div>

    <!-- Paginagtion -->
    @*<nav class="d-flex justify-content-center">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link" href="#">Previous</a>
                </li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item"><a class="page-link" href="#">Next</a></li>
            </ul>
        </nav>*@
</section>


@functions {
    string GetStatusClass(int statusId)
    {
        switch ((SurveyStatusEnum)statusId)
        {
            case SurveyStatusEnum.Draft:
                return "landing__data-waiting";
            case SurveyStatusEnum.Approved:
                return "landing__data-approved";
            case SurveyStatusEnum.Published:
                return "landing__data-published";
            case SurveyStatusEnum.Rejected:
            case SurveyStatusEnum.Deactivated:
                return "landing__data-declined";
            default:
                throw new ArgumentOutOfRangeException(nameof(statusId), $"Unsupported status id: {statusId}");
        }
    }
}



<script type="text/javascript">

    $(function () {
        $('.toggle-on').attr("style", "padding-left: 9px !important; padding-top:6px !important;")
        $('.toggle-off').attr("style", "padding-left: 9px !important; padding-top:6px !important;")
    });

        $('.surveyStatus').change(function () {

        UpdateSurveyStatus();
    })

    //function CopyTextToClipboard(element, surveyUrl) {



    //    var textArea = document.createElement("textarea");
    //    textArea.value = window.location.origin + surveyUrl;
    //    document.body.appendChild(textArea);
    //    textArea.focus();
    //    textArea.select();

    //    try {
    //        var successful = document.execCommand('copy');

    //    }
    //    catch (err) {
    //        alert("Error Occured");
    //    }

    //    document.body.removeChild(textArea);
    //}


    function CopyTextToClipboard(element, surveyUrl) {
        var textArea = document.createElement("textarea");

        textArea.style.position = 'fixed';
        textArea.style.top = '0';
        textArea.style.left = '0';
        textArea.style.width = '2em';
        textArea.style.height = '2em';
        textArea.style.padding = '0';
        textArea.style.border = 'none';
        textArea.style.outline = 'none';
        textArea.style.boxShadow = 'none';
        textArea.style.background = 'transparent';

        textArea.value = window.location.origin + surveyUrl;
        document.body.appendChild(textArea);

        textArea.select();

        try {
            var successful = document.execCommand('copy');

        }
        catch (err) {
            alert("Error Occured");
        }

        document.body.removeChild(textArea);
    }



    function UpdateSurveyStatus(item) {


        var id = $(item).prop('id');
        var status = $(item).prop('checked');


        $.ajax({
            url: '@Url.Action("UpdateSurveyStatus", "Surveys")' + '?id=' + id + '&isActive=' + status,
            type: 'POST',
            dataType: 'JSON',
            success: function (data) {
                if (data.success == true) {
                    window.location.href = '@Url.Action("Index", "Surveys")';
                }
                else {
                    //alert('Error Occured');
                }
            },
            error: function (data) {
               // alert('Error Occured');
            }
        });

        return false;
        }

    function UpdateSurveyTitle(item) {

        var id = $(item).prop('id').replace('checkIcon_','');
        var newTitle = $("#txtNewTitle_" + id).val();

        showLoading();

        $.ajax({
            url: '@Url.Action("UpdateSurveyTitle", "Surveys")' + '?id=' + id + '&title=' + newTitle,
            type: 'POST',
            dataType: 'JSON',
            success: function (data) {
                if (data.success == true) {

                    toggleEdit(id);

                }
                else {

                    hideLoading();
                    alert('Error Occured');
                }
            },
            error: function (data) {
               // alert('Error Occured');
            }
        });

    return false;
    }

    function RevertToDraft(item) {

        var id = $(item).prop('id');

        $.ajax({
        url: '@Url.Action("CheckIfHasAnswer", "Surveys")' + '?id=' + id,
        type: 'POST',
        dataType: 'JSON',
        success: function (data) {
            if (data.success == true) { // has answers
                var deleteConfirmed = confirm(data.errorMessage);
                if (deleteConfirmed) {
                    RevertToDraftConfirmed(id);
                }
            }
            else if (data.success == false) { // has no answers
                    RevertToDraftConfirmed(id);
            }
            else {
                //alert('Error Occured');
            }
        },
        error: function (data) {
           // alert('Error Occured');
        }
    });

        return false;
    }

    function RevertToDraftConfirmed(id) {



    $.ajax({
        url: '@Url.Action("RevertToDraftConfirmed", "Surveys")' + '?id=' + id,
        type: 'POST',
        dataType: 'JSON',
        success: function (data) {
            if (data.success == true) {
                window.location.href = '@Url.Action("Index", "Surveys")';
            }
            else {
                //alert('Error Occured');
            }
        },
        error: function (data) {
           // alert('Error Occured');
        }
    });

    return false;
    }

</script>

<script>
    function toggleEdit(id) {
        var title = document.getElementById("surveyTitle");
        var editIcon = document.getElementById("editIcon");
        var canceleditIcon = document.getElementById("canceleditIcon");
        var checkIcon = document.getElementById("checkIcon_" + id);

        // start editing
        if (editIcon.classList.contains("d-none")) {
            var newTitle = $("#txtNewTitle_" + id).val();
            title.innerHTML = newTitle;
            editIcon.classList.remove("d-none");
            checkIcon.classList.add("d-none");
            canceleditIcon.classList.add("d-none");
            hideLoading();
        } else {

            var input = document.createElement("input");
            input.type = "text";
            input.id = "txtNewTitle_" + id;
            input.value = title.textContent || title.innerText;
            title.innerHTML = "";
            title.appendChild(input);

            editIcon.classList.add("d-none");
            checkIcon.classList.remove("d-none");
            canceleditIcon.classList.remove("d-none");


        }
    }
</script>





