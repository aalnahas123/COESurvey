@using COE.Survey.Web.ViewModels;
@using COE.Common.Localization
@using COE.Common.Model.ViewModels
@using COE.Survey.Web;

@model SurveysViewModel

@{
    ViewBag.Title = "Surveys";
    List<LookupViewModel> modules = ViewBag.Modules;
    List<LookupViewModel> AllStatus = ViewBag.AllStatus;

    bool canCreate = ((SurveysController)this.ViewContext.Controller).IsActionAvailable("CreateSurvey");
    bool canPublish = ((SurveysController)this.ViewContext.Controller).IsActionAvailable("PublishSurvey");
    bool canApprove = ((SurveysController)this.ViewContext.Controller).IsActionAvailable("ApproveSurvey");
}

<link href="~/Content/theme/assets/global/plugins/bootstrap-toggle-master/css/bootstrap-toggle.min.css" rel="stylesheet" />
<script src="~/Content/theme/assets/global/plugins/bootstrap-toggle-master/js/bootstrap-toggle.min.js"></script>


@using (Html.BeginForm("Index", "Surveys", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken();



    <div class="card mb-5">
        <h5 class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <span><i class="fa fa-search"></i> Advanced Search</span>

            </div>
        </h5>

        <div class="card-body">
            <div class="form-body row">
                <div class="form-group col-md-6">
                    <label class="control-label">Survey Module</label>
                    @Html.DropDownListFor(model => model.ModuleId, new SelectList(modules, "Value", "Text"), @SharedResources.DefaultSelect, new { @class = "form-control select2" })
                </div>
                <div class="form-group col-md-6">
                    <label class="control-label">Survey Status</label>
                    @Html.DropDownListFor(model => model.StatusId, new SelectList(AllStatus, "Value", "Text"), @SharedResources.DefaultSelect, new { @class = "form-control select2" })
                </div>
            </div>
            <div class="form-actions text-right">
                <button type="submit" class="btn btn-success">
                    @SharedResources.Search
                </button>
            </div>
        </div>
    </div>

    <div class="card">
        <h5 class="card-header bg-primary text-white">
            <i class="fa fa-list"></i> Surveys
        </h5>
        <div class="card-body">
            <div class="form-body">
                <div class="row">
                    <div class="col-md-12 mb-3">
                        <p>@SharedResources.ItemsCount <span>@(Model?.SurviesList?.Count ?? 0)</span></p>
                    </div>
                </div>
                <!-- Survey Card List Starts Here -->
                <div class="row">


                    @if (canCreate)
                    {
                        <div class="card create-new" style="width: 350px;">
                            <!-- Big Button for Creating New Survey -->
                            <div class="card text-center" style="height: 100%;">
                                <div class="d-flex align-items-center justify-content-center" style="height: 100%;">
                                    <a class="btn btn-light" href="@Url.Action("Add", "Surveys")">
                                        <i class="fas fa-plus-circle"></i>
                                        Create New Survey
                                    </a>
                                </div>
                            </div>
                        </div>

                    }



                    @if (Model?.SurviesList != null && Model.SurviesList.Any())
                    {
                        foreach (var item in Model.SurviesList)
                        {
                            <div class="card" style="width: 350px;">
                                <div class="card-header d-flex justify-content-between align-items-center">

                                    <div class="d-flex">
                                        <h5 class="card-title mb-0 mr-2" id="surveyTitle" data-original-title="@item.SurveyTitle">@item.SurveyTitle</h5>


                                        @if (canCreate)
                                        {
                                            <a href="javascript:void(0)" class="btn btn-light p-0 mr-2 gray" data-toggle="tooltip" title="Edit" id="editIcon" onclick="toggleEdit(@item.ID)">
                                                <i class="fa fa-pencil small-icon"></i>
                                            </a>

                                            <a href="javascript:void(0)" id="checkIcon_@item.ID" class="btn btn-link p-0 mr-2 d-none" data-toggle="tooltip" title="Save" onclick="UpdateSurveyTitle($(this));">
                                                <i class="fa fa-check small-icon"></i>
                                            </a>

                                            <a href="javascript:void(0)" class="btn btn-red p-0 mr-2 d-none" data-toggle="tooltip" title="Edit" id="canceleditIcon" onclick="toggleEdit(@item.ID)">
                                                <i class="fa fa-close small-icon"></i>
                                            </a>
                                        }
                                    </div>

                                    <div class="d-flex align-items-center">
                                        <div class="dropdown">
                                            <a class="btn btn-link p-0 dropdown-toggle" href="#" id="optionsDropdown1" role="button" data-toggle="dropdown"
                                               aria-haspopup="true" aria-expanded="false">
                                            </a>
                                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="optionsDropdown1">



                                                @if (item.StatusId == (int)SurveyStatusEnum.Draft)
                                                {
                                                    if (canCreate)
                                                    {
                                                        <a href="@Url.Action("edit", "Surveys", new { Id = @item.ID })" class="dropdown-item" data-toggle="tooltip" title="Publish"><i class="fa fa-pencil"></i> Edit</a>
                                                    }

                                                    if (canPublish)
                                                    {
                                                        <a href="@Url.Action("publish", "Surveys", new { Id = @item.ID })" class="dropdown-item" data-toggle="tooltip" title="Publish"><i class="fa fa-paper-plane"></i> Publish</a>
                                                    }
                                                }
                                                else if (item.StatusId == (int)SurveyStatusEnum.Published)
                                                {
                                                    if (canApprove)
                                                    {
                                                        <a href="@Url.Action("Approve", "Surveys", new { Id = @item.ID })" class="dropdown-item" data-toggle="tooltip" title="Approve"><i class="fa fa-check"> Approve</i></a>
                                                    }
                                                }
                                                else if (item.StatusId == (int)SurveyStatusEnum.Approved)
                                                {
                                                    <a href="@Url.Action("answer", "Surveys", new { Id = @item.ID })" class="dropdown-item" data-toggle="tooltip" title="Answer"><i class="fa fa-users"></i> Answer</a>
                                                    <button class="dropdown-item" title="Copy Survey Url" onclick="CopyTextToClipboard(this,'@item.SurveyLink')"><i class="fa fa-copy"></i> Copy Link</button>
                                                }
                                                <a href="@Url.Action("Result", "Surveys", new { Id = @item.ID })" class="dropdown-item" data-toggle="tooltip" title="Results"><i class="fa fa-users"></i> Results</a>
                                                <a href="@Url.Action("Dashboard", "Surveys", new { Id = @item.ID })" class="dropdown-item" data-toggle="tooltip" title="Results"><i class="fa fa-users"></i> Dashboard</a>


                                                @if (canCreate)
                                                {
                                                <a href="@Url.Action("Duplicate", "Surveys", new { Id = @item.ID })" class="dropdown-item" data-toggle="tooltip" title="Publish"><i class="fa fa-copy"></i> Clone</a>
                                                }

                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <div class="card-body">
                                    <!-- Card body content goes here -->


                                    @if (string.IsNullOrEmpty(@item.ImageUrl))
                                    {
                                        <img src="~/Content/Images/default300.png" class="img-fluid"
                                             alt="Survey Image">
                                    }
                                    else
                                    {
                                        @*<img src="~/Content/Images/default300.png" class="img-fluid"
                                             alt="Survey Image">*@

                                        <img src="@item.ImageUrl" class="img-fluid"
                                            alt="Survey Image">
                                    }

                                    <hr>

                                    <input class="surveyStatus" id="@item.ID" type="checkbox" onchange="UpdateSurveyStatus($(this));" checked="@item.IsActive" data-toggle="toggle" data-on="Activated" data-off="Deactivated" />

                                    <hr>
                                    <p>@item.ModuleText</p>
                                    <p>Status: @(((SurveyStatusEnum)@item.StatusId).ToString())</p>
                                    <p>Created by: @item.CreatedBy  </p>
                                    <p>Last Update: @item.UpdatedOn</p>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="col-md-12">
                            <div class="alert alert-info">No Surveys to display</div>
                        </div>
                    }
                </div>
                <!-- Survey Card List Ends Here -->
            </div>
        </div>
    </div>



    <script type="text/javascript">

    $(function () {
        $('.toggle-on').attr("style", "padding-left: 9px !important; padding-top:6px !important;")
        $('.toggle-off').attr("style", "padding-left: 9px !important; padding-top:6px !important;")
    });

        $('.surveyStatus').change(function () {

        UpdateSurveyStatus();
    })

    function CopyTextToClipboard(element, surveyUrl) {



        var textArea = document.createElement("textarea");
        textArea.value = window.location.origin + surveyUrl;
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();

        try {
            var successful = document.execCommand('copy');
            if (successful) {
                $(element).children().first().removeClass().addClass('fa fa-clipboard');
            }
            else {
                alert("Error Occured");
            }
        }
        catch (err) {
            alert("Error Occured");
        }

        document.body.removeChild(textArea);
    }


    function UpdateSurveyStatus(item) {


        var id = $(item).prop('id');
        var status = $(item).prop('checked');


        $.ajax({
            url: '@Url.Action("UpdateSurveyStatus", "Surveys")' + '?id=' + id + '&isActive=' + status,
            type: 'POST',
            dataType: 'JSON',
            success: function (data) {
                if (data.success == true) {
                    window.location.href = '@Url.Action("Index", "Surveys")';
                }
                else {
                    //alert('Error Occured');
                }
            },
            error: function (data) {
               // alert('Error Occured');
            }
        });

        return false;
        }

    function UpdateSurveyTitle(item) {

        var id = $(item).prop('id').replace('checkIcon_','');
        var newTitle = $("#txtNewTitle_" + id).val();

        showLoading();

        $.ajax({
            url: '@Url.Action("UpdateSurveyTitle", "Surveys")' + '?id=' + id + '&title=' + newTitle,
            type: 'POST',
            dataType: 'JSON',
            success: function (data) {
                if (data.success == true) {

                    toggleEdit(id);

                }
                else {

                    hideLoading();
                    alert('Error Occured');
                }
            },
            error: function (data) {
               // alert('Error Occured');
            }
        });

    return false;
    }

    </script>

    <script>
        function toggleEdit(id) {
            var title = document.getElementById("surveyTitle");
            var editIcon = document.getElementById("editIcon");
            var canceleditIcon = document.getElementById("canceleditIcon");
            var checkIcon = document.getElementById("checkIcon_" + id);

            // start editing
            if (editIcon.classList.contains("d-none")) {
                var newTitle = $("#txtNewTitle_" + id).val();
                title.innerHTML = newTitle;
                editIcon.classList.remove("d-none");
                checkIcon.classList.add("d-none");
                canceleditIcon.classList.add("d-none");
                hideLoading();
            } else {

                var input = document.createElement("input");
                input.type = "text";
                input.id = "txtNewTitle_" + id;
                input.value = title.textContent || title.innerText;
                title.innerHTML = "";
                title.appendChild(input);

                editIcon.classList.add("d-none");
                checkIcon.classList.remove("d-none");
                canceleditIcon.classList.remove("d-none");


            }
        }
    </script>

}



